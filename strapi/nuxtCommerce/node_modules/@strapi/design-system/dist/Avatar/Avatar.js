import r, { useState as m } from "react";
import a from "styled-components";
import i from "prop-types";
import { avatarSize as t, previewSize as s } from "./constants.js";
import { Typography as c } from "../Typography/Typography.js";
import { Flex as u } from "../Flex/Flex.js";
const h = a.img`
  border-radius: 50%;
  object-fit: cover;
  display: block;
  position: relative;
`, g = a.div`
  position: relative;
  width: ${t / 16}rem;
  height: ${t / 16}rem;
  z-index: ${({ hovering: e }) => e ? 1 : void 0};
`, f = a.img`
  border-radius: 50%;
  object-fit: cover;
  position: absolute;
  transform: translate(-${(s - t) / 2}px, -100%);
  margin-top: -${({ theme: e }) => e.spaces[1]};
`, v = a.div`
  z-index: 1;
  border-radius: 30%;
  position: absolute;
  width: ${t / 16}rem;
  height: ${t / 16}rem;
  background: ${({ theme: e }) => e.colors.neutral0};
  opacity: 0.4;
`, p = ({ src: e, alt: d, preview: o }) => {
  const [n, l] = m(!1);
  return /* @__PURE__ */ r.createElement("span", null, o && n ? /* @__PURE__ */ r.createElement(f, {
    "aria-hidden": !0,
    alt: "",
    width: `${s}px`,
    height: `${s}px`,
    src: o === !0 ? e : o
  }) : null, /* @__PURE__ */ r.createElement(g, {
    hovering: o && n,
    onMouseEnter: () => l(!0),
    onMouseLeave: () => l(!1)
  }, o && n ? /* @__PURE__ */ r.createElement(v, null) : null, /* @__PURE__ */ r.createElement(h, {
    src: e,
    alt: d,
    width: `${t}px`,
    height: `${t}px`
  })));
}, b = a(u)`
  span {
    line-height: 0;
  }
`, $ = ({ children: e }) => /* @__PURE__ */ r.createElement(b, {
  borderRadius: "50%",
  width: `${t}px`,
  height: `${t}px`,
  background: "primary600",
  justifyContent: "center"
}, /* @__PURE__ */ r.createElement(c, {
  fontWeight: "bold",
  textColor: "buttonNeutral0",
  fontSize: 0,
  textTransform: "uppercase"
}, e));
$.propTypes = {
  children: i.node.isRequired
};
p.defaultProps = {
  alt: void 0,
  preview: void 0
};
p.propTypes = {
  alt: i.string,
  preview: i.oneOfType([i.string, i.bool]),
  src: i.string.isRequired
};
export {
  p as Avatar,
  $ as Initials
};
