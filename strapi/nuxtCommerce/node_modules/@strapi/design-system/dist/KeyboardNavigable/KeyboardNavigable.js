var I = Object.defineProperty;
var i = Object.getOwnPropertySymbols;
var y = Object.prototype.hasOwnProperty, g = Object.prototype.propertyIsEnumerable;
var E = (e, t, n) => t in e ? I(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n, v = (e, t) => {
  for (var n in t || (t = {}))
    y.call(t, n) && E(e, n, t[n]);
  if (i)
    for (var n of i(t))
      g.call(t, n) && E(e, n, t[n]);
  return e;
};
var x = (e, t) => {
  var n = {};
  for (var o in e)
    y.call(e, o) && t.indexOf(o) < 0 && (n[o] = e[o]);
  if (e != null && i)
    for (var o of i(e))
      t.indexOf(o) < 0 && g.call(e, o) && (n[o] = e[o]);
  return n;
};
import h from "react";
import b from "prop-types";
import { Box as k } from "../Box/Box.js";
import { KeyboardKeys as a } from "../helpers/keyboardKeys.js";
const D = (o) => {
  var p = o, { tagName: e, attributeName: t } = p, n = x(p, ["tagName", "attributeName"]);
  const u = () => {
    const r = document.activeElement;
    return e ? r.tagName.toLowerCase() === e : r.hasAttribute(t);
  }, f = (r) => e ? r.querySelectorAll(e) : r.querySelectorAll(`[${t}]`), T = (r) => {
    switch (r.key) {
      case a.RIGHT:
      case a.DOWN: {
        if (u()) {
          r.preventDefault();
          const c = document.activeElement, s = [...f(r.currentTarget)], l = s.findIndex((m) => m === c), d = l + 1 < s.length ? l + 1 : 0;
          s[d].focus();
        }
        break;
      }
      case a.LEFT:
      case a.UP: {
        if (u()) {
          r.preventDefault();
          const c = document.activeElement, s = [...f(r.currentTarget)], l = s.findIndex((m) => m === c), d = l - 1 > -1 ? l - 1 : s.length - 1;
          s[d].focus();
        }
        break;
      }
      case a.HOME: {
        u() && (r.preventDefault(), f(r.currentTarget).item(0).focus());
        break;
      }
      case a.END: {
        if (u()) {
          r.preventDefault();
          const c = f(r.currentTarget);
          c.item(c.length - 1).focus();
        }
        break;
      }
    }
  };
  return /* @__PURE__ */ h.createElement(k, v({
    onKeyDown: T
  }, n));
};
D.defaultProps = {
  attributeName: void 0,
  tagName: void 0
};
D.propTypes = {
  attributeName: b.string,
  tagName: b.string
};
export {
  D as KeyboardNavigable
};
