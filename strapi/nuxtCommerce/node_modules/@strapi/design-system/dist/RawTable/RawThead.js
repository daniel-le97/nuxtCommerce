var h = Object.defineProperty;
var n = Object.getOwnPropertySymbols;
var d = Object.prototype.hasOwnProperty, i = Object.prototype.propertyIsEnumerable;
var a = (e, r, o) => r in e ? h(e, r, { enumerable: !0, configurable: !0, writable: !0, value: o }) : e[r] = o, p = (e, r) => {
  for (var o in r || (r = {}))
    d.call(r, o) && a(e, o, r[o]);
  if (n)
    for (var o of n(r))
      i.call(r, o) && a(e, o, r[o]);
  return e;
};
var l = (e, r) => {
  var o = {};
  for (var t in e)
    d.call(e, t) && r.indexOf(t) < 0 && (o[t] = e[t]);
  if (e != null && n)
    for (var t of n(e))
      r.indexOf(t) < 0 && i.call(e, t) && (o[t] = e[t]);
  return o;
};
import s, { Children as f, cloneElement as u } from "react";
import y from "prop-types";
const R = (o) => {
  var t = o, { children: e } = t, r = l(t, ["children"]);
  const c = f.toArray(e).map((m) => u(m, { "aria-rowindex": 1 }));
  return /* @__PURE__ */ s.createElement("thead", p({}, r), c);
};
R.propTypes = {
  children: y.node.isRequired
};
export {
  R as RawThead
};
