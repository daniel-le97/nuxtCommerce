var f = Object.defineProperty;
var n = Object.getOwnPropertySymbols;
var c = Object.prototype.hasOwnProperty, d = Object.prototype.propertyIsEnumerable;
var a = (r, e, o) => e in r ? f(r, e, { enumerable: !0, configurable: !0, writable: !0, value: o }) : r[e] = o, l = (r, e) => {
  for (var o in e || (e = {}))
    c.call(e, o) && a(r, o, e[o]);
  if (n)
    for (var o of n(e))
      d.call(e, o) && a(r, o, e[o]);
  return r;
};
var m = (r, e) => {
  var o = {};
  for (var i in r)
    c.call(r, i) && e.indexOf(i) < 0 && (o[i] = r[i]);
  if (r != null && n)
    for (var i of n(r))
      e.indexOf(i) < 0 && d.call(r, i) && (o[i] = r[i]);
  return o;
};
import w, { Children as x, cloneElement as R } from "react";
import p from "prop-types";
import { Box as h } from "../Box/Box.js";
const y = (o) => {
  var i = o, { children: r } = i, e = m(i, ["children"]);
  const s = x.toArray(r).map(
    (u, t) => R(u, { "aria-colindex": t + 1, coords: { col: t + 1, row: e["aria-rowindex"] } })
  );
  return /* @__PURE__ */ w.createElement(h, l({
    as: "tr"
  }, e), s);
};
y.propTypes = {
  "aria-rowindex": p.number.isRequired,
  children: p.node.isRequired
};
export {
  y as RawTr
};
