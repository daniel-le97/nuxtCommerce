var P = Object.defineProperty;
var n = Object.getOwnPropertySymbols;
var u = Object.prototype.hasOwnProperty, b = Object.prototype.propertyIsEnumerable;
var f = (o, t, e) => t in o ? P(o, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : o[t] = e, d = (o, t) => {
  for (var e in t || (t = {}))
    u.call(t, e) && f(o, e, t[e]);
  if (n)
    for (var e of n(t))
      b.call(t, e) && f(o, e, t[e]);
  return o;
};
var s = (o, t) => {
  var e = {};
  for (var i in o)
    u.call(o, i) && t.indexOf(i) < 0 && (e[i] = o[i]);
  if (o != null && n)
    for (var i of n(o))
      t.indexOf(i) < 0 && b.call(o, i) && (e[i] = o[i]);
  return e;
};
import r from "react";
import l from "prop-types";
import W from "styled-components";
import { Box as z } from "../Box/Box.js";
import { Typography as C } from "../Typography/Typography.js";
import { Portal as _ } from "../Portal/Portal.js";
import { useTooltipHandlers as k } from "./hooks/useTooltipHandlers.js";
import { useTooltipLayout as q } from "./hooks/useTooltipLayout.js";
import { useId as y } from "../helpers/useId.js";
import { VisuallyHidden as B } from "../VisuallyHidden/VisuallyHidden.js";
const F = W(z)`
  position: absolute;
  /* z-index exist because of its position inside Modals */
  z-index: 4;
  display: ${({ visible: o }) => o ? "revert" : "none"};
`, g = (L) => {
  var m = L, { children: o, label: t, description: e, delay: i, position: v, id: x } = m, E = s(m, ["children", "label", "description", "delay", "position", "id"]);
  const p = y("tooltip", x), T = y("description"), c = k(i), { visible: a } = c, h = s(c, ["visible"]), { tooltipWrapperRef: R, toggleSourceRef: I } = q(a, v), H = r.cloneElement(o, d({
    tabIndex: 0,
    "aria-labelledby": t ? p : void 0,
    "aria-describedby": e ? p : void 0
  }, h));
  return /* @__PURE__ */ r.createElement(r.Fragment, null, /* @__PURE__ */ r.createElement(_, null, /* @__PURE__ */ r.createElement(F, d({
    id: p,
    background: "neutral900",
    hasRadius: !0,
    padding: 2,
    role: "tooltip",
    ref: R,
    visible: a
  }, E), a && /* @__PURE__ */ r.createElement(B, {
    id: T
  }, e), /* @__PURE__ */ r.createElement(C, {
    as: "p",
    variant: "pi",
    fontWeight: "bold",
    textColor: "neutral0"
  }, t || e))), /* @__PURE__ */ r.createElement("span", {
    ref: I
  }, H));
};
g.defaultProps = {
  delay: 500,
  id: void 0,
  position: "top",
  label: void 0,
  description: void 0
};
g.propTypes = {
  children: l.node.isRequired,
  delay: l.number,
  description: l.string,
  id: l.string,
  label: l.string,
  position: l.oneOf(["top", "left", "bottom", "right"])
};
export {
  g as Tooltip
};
