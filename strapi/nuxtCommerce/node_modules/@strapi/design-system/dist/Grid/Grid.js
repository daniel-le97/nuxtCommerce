var c = Object.defineProperty;
var m = Object.getOwnPropertySymbols;
var n = Object.prototype.hasOwnProperty, d = Object.prototype.propertyIsEnumerable;
var i = (r, e, o) => e in r ? c(r, e, { enumerable: !0, configurable: !0, writable: !0, value: o }) : r[e] = o, l = (r, e) => {
  for (var o in e || (e = {}))
    n.call(e, o) && i(r, o, e[o]);
  if (m)
    for (var o of m(e))
      d.call(e, o) && i(r, o, e[o]);
  return r;
};
var s = (r, e) => {
  var o = {};
  for (var t in r)
    n.call(r, t) && e.indexOf(t) < 0 && (o[t] = r[t]);
  if (r != null && m)
    for (var t of m(r))
      e.indexOf(t) < 0 && d.call(r, t) && (o[t] = r[t]);
  return o;
};
import f from "react";
import y from "styled-components";
import p from "prop-types";
import { GridContext as g } from "./GridContext.js";
import { Box as b } from "../Box/Box.js";
import v from "../helpers/handleResponsiveValues.js";
const x = y(b)`
  display: grid;
  grid-template-columns: repeat(${({ gridCols: r }) => r}, 1fr);
  ${({ theme: r, gap: e }) => v("gap", e, r)}
`, u = (t) => {
  var a = t, { gap: r, gridCols: e } = a, o = s(a, ["gap", "gridCols"]);
  return /* @__PURE__ */ f.createElement(g.Provider, {
    value: { gap: r, gridCols: e }
  }, /* @__PURE__ */ f.createElement(x, l({
    gap: r,
    gridCols: e
  }, o)));
};
u.defaultProps = {
  gap: 0,
  gridCols: 12
};
u.propTypes = {
  gap: p.oneOfType([p.number, p.arrayOf(p.number)]),
  gridCols: p.number
};
export {
  u as Grid
};
