var R = Object.defineProperty;
var n = Object.getOwnPropertySymbols;
var u = Object.prototype.hasOwnProperty, m = Object.prototype.propertyIsEnumerable;
var c = (e, o, r) => o in e ? R(e, o, { enumerable: !0, configurable: !0, writable: !0, value: r }) : e[o] = r, f = (e, o) => {
  for (var r in o || (o = {}))
    u.call(o, r) && c(e, r, o[r]);
  if (n)
    for (var r of n(o))
      m.call(o, r) && c(e, r, o[r]);
  return e;
};
var h = (e, o) => {
  var r = {};
  for (var t in e)
    u.call(e, t) && o.indexOf(t) < 0 && (r[t] = e[t]);
  if (e != null && n)
    for (var t of n(e))
      o.indexOf(t) < 0 && m.call(e, t) && (r[t] = e[t]);
  return r;
};
import a, { useRef as $ } from "react";
import i from "prop-types";
import g from "styled-components";
import { Box as l } from "../Box/Box.js";
import { Typography as v } from "../Typography/Typography.js";
import { Flex as w } from "../Flex/Flex.js";
import E from "../BaseCheckbox/assets/checkmark.js";
const T = g.div`
  border: 1px solid
    ${({ theme: e, selected: o, indeterminate: r }) => o || r ? e.colors.primary600 : e.colors.neutral300};
  border-radius: ${({ theme: e }) => e.borderRadius};
  height: 18px;
  width: 18px;
  position: relative;
  z-index: 1;
  overflow: hidden;
  background-color: ${({ theme: e, selected: o, indeterminate: r }) => o || r ? e.colors.primary600 : e.colors.neutral0};

  ${({ theme: e, indeterminate: o }) => o && `&::after {
      content: '';
      display: block;
      position: relative;
      color: white;
      height: 2px;
      width: 10px;
      background-color: ${e.colors.neutral0};
      left: 50%;
      top: 50%;
      transform: translateX(-50%) translateY(-50%);
    }

  `}

  ${({ selected: e }) => e && `  
    &::after {
      content: '';
      background: url(${E}) no-repeat no-repeat center center;
      width: 100%;
      height: 100%;
      position: absolute;
    }

  `}
`, O = g(l)`
  width: 100%;
  border: none;
  text-align: left;
  outline-offset: -3px;
  &.is-focused {
    background: ${({ theme: e }) => e.colors.primary100};
  }

  &:hover {
    background: ${({ theme: e }) => e.colors.primary100};
  }
`, d = (C) => {
  var s = C, { selected: e, indeterminate: o, children: r, value: t, multi: b, isChild: y, startIcon: p } = s, x = h(s, ["selected", "indeterminate", "children", "value", "multi", "isChild", "startIcon"]);
  const k = $(null);
  return /* @__PURE__ */ a.createElement(O, f({
    as: "li",
    hasRadius: !0,
    paddingLeft: y ? 7 : 4,
    paddingRight: 4,
    paddingTop: 2,
    paddingBottom: 2,
    ref: k,
    role: "option",
    "aria-selected": e,
    background: "neutral0",
    "data-strapi-value": t
  }, x), /* @__PURE__ */ a.createElement(w, null, p && /* @__PURE__ */ a.createElement(l, {
    paddingRight: 2,
    "aria-hidden": !0
  }, p), b && /* @__PURE__ */ a.createElement(l, {
    paddingRight: 2,
    "aria-hidden": !0
  }, /* @__PURE__ */ a.createElement(T, {
    selected: e,
    indeterminate: o
  })), /* @__PURE__ */ a.createElement(v, {
    textColor: e ? "primary600" : "neutral800",
    fontWeight: e ? "bold" : null
  }, r)));
};
d.defaultProps = {
  isChild: !1,
  multi: !1,
  selected: !1,
  startIcon: void 0,
  indeterminate: !1
};
d.propTypes = {
  children: i.oneOfType([i.string, i.number]).isRequired,
  indeterminate: i.bool,
  isChild: i.bool,
  multi: i.bool,
  selected: i.bool,
  startIcon: i.node,
  value: i.oneOfType([i.string, i.number]).isRequired
};
d.displayName = "Option";
export {
  d as Option
};
