var h = Object.defineProperty;
var m = Object.getOwnPropertySymbols;
var f = Object.prototype.hasOwnProperty, b = Object.prototype.propertyIsEnumerable;
var s = (e, r, o) => r in e ? h(e, r, { enumerable: !0, configurable: !0, writable: !0, value: o }) : e[r] = o, p = (e, r) => {
  for (var o in r || (r = {}))
    f.call(r, o) && s(e, o, r[o]);
  if (m)
    for (var o of m(r))
      b.call(r, o) && s(e, o, r[o]);
  return e;
};
var u = (e, r) => {
  var o = {};
  for (var t in e)
    f.call(e, t) && r.indexOf(t) < 0 && (o[t] = e[t]);
  if (e != null && m)
    for (var t of m(e))
      r.indexOf(t) < 0 && b.call(e, t) && (o[t] = e[t]);
  return o;
};
import n from "react";
import E from "styled-components";
import i from "prop-types";
import { BaseCheckbox as g } from "../BaseCheckbox/BaseCheckbox.js";
import { Stack as k } from "../Stack/Stack.js";
import { Field as T } from "../Field/Field.js";
import "../Field/FieldLabel.js";
import "../Field/FieldInput.js";
import { FieldHint as C } from "../Field/FieldHint.js";
import { FieldError as F } from "../Field/FieldError.js";
import { useField as v } from "../Field/FieldContext.js";
import "../Field/FieldAction.js";
import { Box as O } from "../Box/Box.js";
import { useId as $ } from "../helpers/useId.js";
import { Typography as B } from "../Typography/Typography.js";
const I = E(B)`
  display: flex;
  align-items: flex-start;
  * {
    cursor: ${({ disabled: e }) => e ? "not-allowed" : "pointer"};
  }
`, L = (e) => {
  const { id: r } = v();
  return /* @__PURE__ */ n.createElement(g, p({
    id: r
  }, e));
}, x = (P) => {
  var c = P, { children: e, disabled: r, id: o, hint: t, error: d } = c, y = u(c, ["children", "disabled", "id", "hint", "error"]);
  const l = $("checkbox", o);
  let a;
  return d ? a = `${l}-error` : t && (a = `${l}-hint`), /* @__PURE__ */ n.createElement(T, {
    id: l,
    hint: t,
    error: d
  }, /* @__PURE__ */ n.createElement(k, {
    spacing: 1
  }, /* @__PURE__ */ n.createElement(I, {
    as: "label",
    textColor: "neutral800",
    disabled: r
  }, /* @__PURE__ */ n.createElement(L, p({
    disabled: r,
    "aria-describedby": a
  }, y)), /* @__PURE__ */ n.createElement(O, {
    paddingLeft: 2
  }, e)), /* @__PURE__ */ n.createElement(C, null), /* @__PURE__ */ n.createElement(F, null)));
};
x.defaultProps = {
  disabled: !1,
  id: void 0,
  error: void 0,
  hint: void 0
};
x.propTypes = {
  children: i.node.isRequired,
  disabled: i.bool,
  error: i.string,
  hint: i.oneOfType([i.string, i.node, i.arrayOf(i.node)]),
  id: i.oneOfType([i.string, i.number])
};
export {
  x as Checkbox
};
