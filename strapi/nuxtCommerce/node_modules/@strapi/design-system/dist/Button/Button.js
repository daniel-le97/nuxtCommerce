var W = Object.defineProperty;
var n = Object.getOwnPropertySymbols;
var h = Object.prototype.hasOwnProperty, b = Object.prototype.propertyIsEnumerable;
var g = (e, t, o) => t in e ? W(e, t, { enumerable: !0, configurable: !0, writable: !0, value: o }) : e[t] = o, y = (e, t) => {
  for (var o in t || (t = {}))
    h.call(t, o) && g(e, o, t[o]);
  if (n)
    for (var o of n(t))
      b.call(t, o) && g(e, o, t[o]);
  return e;
};
var $ = (e, t) => {
  var o = {};
  for (var r in e)
    h.call(e, r) && t.indexOf(r) < 0 && (o[r] = e[r]);
  if (e != null && n)
    for (var r of n(e))
      t.indexOf(r) < 0 && b.call(e, r) && (o[r] = e[r]);
  return o;
};
import a from "react";
import i from "prop-types";
import s, { keyframes as I } from "styled-components";
import N from "@strapi/icons/Loader";
import { Typography as S } from "../Typography/Typography.js";
import { Box as c } from "../Box/Box.js";
import { getDisabledStyle as v, getHoverStyle as P, getActiveStyle as w, getVariantStyle as A } from "./utils.js";
import { BUTTON_SIZES as C, VARIANTS as H } from "./constants.js";
import { BaseButton as L } from "../BaseButton/BaseButton.js";
const O = I`
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
`, _ = s.div`
  animation: ${O} 2s infinite linear;
  will-change: transform;
`, z = s(c)`
  height: 100%;
`, D = s(L)`
  align-items: center;
  background-color: ${({ theme: e }) => e.colors.buttonPrimary600};
  border: 1px solid ${({ theme: e }) => e.colors.buttonPrimary600};
  height: ${({ theme: e, size: t }) => e.sizes.button[t]};
  padding-left: ${({ theme: e }) => e.spaces[4]};
  padding-right: ${({ theme: e }) => e.spaces[4]};

  ${c} {
    display: flex;
    align-items: center;
  }

  ${S} {
    color: ${({ theme: e }) => e.colors.buttonNeutral0};
  }

  &[aria-disabled='true'] {
    ${v}
    &:active {
      ${v}
    }
  }
  &:hover {
    ${P}
  }
  &:active {
    ${w}
  }
  ${A}
  ${({ fullWidth: e }) => e && `
    display: inline-flex;
    justify-content: center;
    width: 100%;
  `}
`, m = a.forwardRef(
  (V, T) => {
    var u = V, { variant: e, startIcon: t, endIcon: o, disabled: r, children: B, onClick: f, size: p, loading: l, fullWidth: E } = u, x = $(u, ["variant", "startIcon", "endIcon", "disabled", "children", "onClick", "size", "loading", "fullWidth"]);
    const d = r || l, k = (R) => {
      !d && f && f(R);
    };
    return /* @__PURE__ */ a.createElement(D, y({
      ref: T,
      "aria-disabled": d,
      disabled: d,
      size: p,
      variant: e,
      onClick: k,
      fullWidth: E
    }, x), (t || l) && /* @__PURE__ */ a.createElement(z, {
      "aria-hidden": !0,
      paddingRight: 2
    }, l ? /* @__PURE__ */ a.createElement(_, null, /* @__PURE__ */ a.createElement(N, null)) : t), /* @__PURE__ */ a.createElement(S, {
      variant: p === "S" ? "pi" : void 0,
      fontWeight: "bold",
      lineHeight: 0
    }, B), o && /* @__PURE__ */ a.createElement(c, {
      "aria-hidden": !0,
      paddingLeft: 2
    }, o));
  }
);
m.displayName = "Button";
m.defaultProps = {
  disabled: !1,
  endIcon: void 0,
  fullWidth: !1,
  loading: !1,
  onClick: void 0,
  size: "S",
  startIcon: void 0,
  variant: "default"
};
m.propTypes = {
  children: i.node.isRequired,
  disabled: i.bool,
  endIcon: i.element,
  fullWidth: i.bool,
  loading: i.bool,
  onClick: i.func,
  size: i.oneOf(C),
  startIcon: i.element,
  variant: i.oneOf(H)
};
export {
  m as Button,
  D as ButtonWrapper
};
