import { Typography as c } from "../Typography/Typography.js";
import { LIGHT_VARIANTS as $, TERTIARY as s, DEFAULT as n, SECONDARY as u, VARIANTS as g, GHOST as d, DANGER as b, SUCCESS as t, SUCCESS_LIGHT as p, DANGER_LIGHT as e } from "./constants.js";
const l = (o) => $.includes(o) ? o.substring(0, o.lastIndexOf("-")) : o === s ? "neutral" : [n, u].includes(o) || !g.includes(o) ? "primary" : o, a = ({ theme: o }) => `
    border: 1px solid ${o.colors.neutral200};
    background: ${o.colors.neutral150};
    ${c} {
      color: ${o.colors.neutral600};
    }
    svg {
      > g, path {
        fill: ${o.colors.neutral600};
      }
    }
  `, S = ({ theme: o, variant: r }) => [...$, u].includes(r) ? `
      background-color: ${o.colors.neutral0};
    ` : r === s ? `
      background-color: ${o.colors.neutral100};
    ` : r === d ? `
      background-color: ${o.colors.neutral100};
    ` : r === n ? `
      border: 1px solid ${o.colors.buttonPrimary500};
      background: ${o.colors.buttonPrimary500};
    ` : `
    border: 1px solid ${o.colors[`${l(r)}500`]};
    background: ${o.colors[`${l(r)}500`]};
  `, k = ({ theme: o, variant: r }) => [...$, u].includes(r) ? `
      background-color: ${o.colors.neutral0};
      border: 1px solid ${o.colors[`${l(r)}600`]};
      ${c} {
        color: ${o.colors[`${l(r)}600`]};
      }
      svg {
        > g, path {
          fill: ${o.colors[`${l(r)}600`]};
        }
      }
    ` : r === s ? `
      background-color: ${o.colors.neutral150};
    ` : `
    border: 1px solid ${o.colors[`${l(r)}600`]};
    background: ${o.colors[`${l(r)}600`]};
  `, x = ({ theme: o, variant: r }) => {
  switch (r) {
    case e:
    case p:
    case u:
      return `
          border: 1px solid ${o.colors[`${l(r)}200`]};
          background: ${o.colors[`${l(r)}100`]};
          ${c} {
            color: ${o.colors[`${l(r)}700`]};
          }
          svg {
            > g, path {
              fill: ${o.colors[`${l(r)}700`]};
            }
          }
        `;
    case s:
      return `
          border: 1px solid ${o.colors.neutral200};
          background: ${o.colors.neutral0};
          ${c} {
            color: ${o.colors.neutral800};
          }
          svg {
            > g, path {
              fill: ${o.colors.neutral800};
            }
          }
        `;
    case d:
      return `
        border: 1px solid transparent;
        background: transparent;

        ${c} {
          color: ${o.colors.neutral800};
        }

        svg {
          > g, path {
            fill: ${o.colors.neutral500};
          }
        }
      `;
    case t:
    case b:
      return `
          border: 1px solid ${o.colors[`${l(r)}600`]};
          background: ${o.colors[`${l(r)}600`]};
          ${c} {
            color: ${o.colors.neutral0};
          }
        `;
    default:
      return `
          svg {
            > g, path {
              fill: ${o.colors.buttonNeutral0};
            }
          }
        `;
  }
};
export {
  k as getActiveStyle,
  a as getDisabledStyle,
  S as getHoverStyle,
  l as getVariantColorName,
  x as getVariantStyle
};
