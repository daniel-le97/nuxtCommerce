var g = Object.defineProperty;
var l = Object.getOwnPropertySymbols;
var p = Object.prototype.hasOwnProperty, m = Object.prototype.propertyIsEnumerable;
var c = (e, r, t) => r in e ? g(e, r, { enumerable: !0, configurable: !0, writable: !0, value: t }) : e[r] = t, a = (e, r) => {
  for (var t in r || (r = {}))
    p.call(r, t) && c(e, t, r[t]);
  if (l)
    for (var t of l(r))
      m.call(r, t) && c(e, t, r[t]);
  return e;
};
var s = (e, r) => {
  var t = {};
  for (var o in e)
    p.call(e, o) && r.indexOf(o) < 0 && (t[o] = e[o]);
  if (e != null && l)
    for (var o of l(e))
      r.indexOf(o) < 0 && m.call(e, o) && (t[o] = e[o]);
  return t;
};
import n from "react";
import u from "styled-components";
import d from "prop-types";
import { Flex as T } from "../Flex/Flex.js";
import { RawTd as x, RawTh as k } from "../RawTable/RawCell.js";
const f = u(x)`
  vertical-align: middle;
  text-align: left;
  color: ${({ theme: e }) => e.colors.neutral600};
  outline-offset: -4px;

  /**
  * Hack to make sure the checkbox looks aligned
  */
  input {
    vertical-align: sub;
  }
`, v = u.span`
  svg {
    height: ${4 / 16}rem;
  }
`, h = (o) => {
  var i = o, { children: e, action: r } = i, t = s(i, ["children", "action"]);
  return /* @__PURE__ */ n.createElement(f, a({
    as: k
  }, t), /* @__PURE__ */ n.createElement(T, null, e, /* @__PURE__ */ n.createElement(v, null, r)));
};
h.defaultProps = {
  action: void 0
};
h.propTypes = {
  action: d.node,
  children: d.node.isRequired
};
const W = (e) => /* @__PURE__ */ n.createElement(f, a({}, e));
export {
  W as Td,
  h as Th
};
