var g = Object.defineProperty;
var n = Object.getOwnPropertySymbols;
var l = Object.prototype.hasOwnProperty, p = Object.prototype.propertyIsEnumerable;
var m = (e, t, r) => t in e ? g(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r }) : e[t] = r, c = (e, t) => {
  for (var r in t || (t = {}))
    l.call(t, r) && m(e, r, t[r]);
  if (n)
    for (var r of n(t))
      p.call(t, r) && m(e, r, t[r]);
  return e;
};
var s = (e, t) => {
  var r = {};
  for (var o in e)
    l.call(e, o) && t.indexOf(o) < 0 && (r[o] = e[o]);
  if (e != null && n)
    for (var o of n(e))
      t.indexOf(o) < 0 && p.call(e, o) && (r[o] = e[o]);
  return r;
};
import i from "react";
import u from "prop-types";
import f from "styled-components";
import { Box as a } from "../Box/Box.js";
import { Divider as h } from "../Divider/Divider.js";
import { Typography as y } from "../Typography/Typography.js";
import { Flex as b } from "../Flex/Flex.js";
const x = f(a)`
  height: ${24 / 16}rem;
  width: ${24 / 16}rem;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;

  svg {
    height: ${10 / 16}rem;
    width: ${10 / 16}rem;
  }

  svg path {
    fill: ${({ theme: e }) => e.colors.primary600};
  }
`, E = f(a)`
  border-radius: 0 0 ${({ theme: e }) => e.borderRadius} ${({ theme: e }) => e.borderRadius};
  display: block;
  width: 100%;
  border: none;
`, $ = (o) => {
  var d = o, { children: e, icon: t } = d, r = s(d, ["children", "icon"]);
  return /* @__PURE__ */ i.createElement("div", null, /* @__PURE__ */ i.createElement(h, null), /* @__PURE__ */ i.createElement(E, c({
    as: "button",
    background: "primary100",
    padding: 5
  }, r), /* @__PURE__ */ i.createElement(b, null, /* @__PURE__ */ i.createElement(x, {
    "aria-hidden": !0,
    background: "primary200"
  }, t), /* @__PURE__ */ i.createElement(a, {
    paddingLeft: 3
  }, /* @__PURE__ */ i.createElement(y, {
    variant: "pi",
    fontWeight: "bold",
    textColor: "primary600"
  }, e)))));
};
$.propTypes = {
  children: u.string.isRequired,
  icon: u.node.isRequired
};
export {
  $ as TFooter
};
