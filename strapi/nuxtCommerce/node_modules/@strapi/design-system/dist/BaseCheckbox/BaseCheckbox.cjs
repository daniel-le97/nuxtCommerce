"use strict";var $=Object.defineProperty;var l=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,b=Object.prototype.propertyIsEnumerable;var d=(e,o,r)=>o in e?$(e,o,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[o]=r,f=(e,o)=>{for(var r in o||(o={}))p.call(o,r)&&d(e,r,o[r]);if(l)for(var r of l(o))b.call(o,r)&&d(e,r,o[r]);return e};var k=(e,o)=>{var r={};for(var t in e)p.call(e,t)&&o.indexOf(t)<0&&(r[t]=e[t]);if(e!=null&&l)for(var t of l(e))o.indexOf(t)<0&&b.call(e,t)&&(r[t]=e[t]);return r};Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const s=require("react"),C=require("prop-types"),_=require("styled-components"),B=require("../Box/Box.cjs"),h=require("./utils.cjs"),q=require("./assets/checkmark.cjs"),j=require("./assets/checkmark-black.cjs"),u=e=>e&&typeof e=="object"&&"default"in e?e:{default:e},g=u(s),a=u(C),v=u(_),w=v.default.input`
  margin: 0;
  height: ${h.getCheckboxSize};
  min-width: ${h.getCheckboxSize};
  border-radius: ${({theme:e})=>e.borderRadius};
  border: 1px solid ${({theme:e})=>e.colors.neutral300};
  -webkit-appearance: none;
  background-color: ${({theme:e})=>e.colors.neutral0};
  cursor: pointer;

  &:checked {
    background-color: ${({theme:e})=>e.colors.primary600};
    border: 1px solid ${({theme:e})=>e.colors.primary600};

    &:after {
      content: '';
      display: block;
      position: relative;
      background: url(${q}) no-repeat no-repeat center center;
      width: 10px;
      height: 10px;
      left: 50%;
      top: 50%;
      transform: translateX(-50%) translateY(-50%);
    }

    &:disabled:after {
      background: url(${j}) no-repeat no-repeat center center;
    }
  }

  &:disabled {
    background-color: ${({theme:e})=>e.colors.neutral200};
    border: 1px solid ${({theme:e})=>e.colors.neutral300};
  }

  &:indeterminate {
    background-color: ${({theme:e})=>e.colors.primary600};
    border: 1px solid ${({theme:e})=>e.colors.primary600};

    &:after {
      content: '';
      display: block;
      position: relative;
      color: white;
      height: 2px;
      width: 10px;
      background-color: ${({theme:e})=>e.colors.neutral0};
      left: 50%;
      top: 50%;
      transform: translateX(-50%) translateY(-50%);
    }

    &:disabled {
      background-color: ${({theme:e})=>e.colors.neutral200};
      border: 1px solid ${({theme:e})=>e.colors.neutral300};
      &:after {
        background-color: ${({theme:e})=>e.colors.neutral500};
      }
    }
  }
`,n=R=>{var i=R,{indeterminate:e,size:o,name:r,value:t,onValueChange:m}=i,x=k(i,["indeterminate","size","name","value","onValueChange"]);const c=s.useRef();s.useEffect(()=>{c.current&&e?c.current.indeterminate=e:c.current.indeterminate=!1},[e]);const y=()=>{m(!t)};return g.default.createElement(B.Box,null,g.default.createElement(w,f({size:o,checked:t,onChange:y,type:"checkbox",ref:c,name:r},x)))};n.displayName="BaseCheckbox";n.defaultProps={indeterminate:!1,name:null,onValueChange(){},size:"M",value:!1};n.propTypes={indeterminate:a.default.bool,name:a.default.string,onValueChange:a.default.func,size:a.default.oneOf(["M","L"]),value:a.default.bool};exports.BaseCheckbox=n;
