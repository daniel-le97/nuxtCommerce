var S = Object.defineProperty;
var c = Object.getOwnPropertySymbols;
var h = Object.prototype.hasOwnProperty, k = Object.prototype.propertyIsEnumerable;
var D = (t, r, e) => r in t ? S(t, r, { enumerable: !0, configurable: !0, writable: !0, value: e }) : t[r] = e, E = (t, r) => {
  for (var e in r || (r = {}))
    h.call(r, e) && D(t, e, r[e]);
  if (c)
    for (var e of c(r))
      k.call(r, e) && D(t, e, r[e]);
  return t;
};
var R = (t, r) => {
  var e = {};
  for (var o in t)
    h.call(t, o) && r.indexOf(o) < 0 && (e[o] = t[o]);
  if (t != null && c)
    for (var o of c(t))
      r.indexOf(o) < 0 && k.call(t, o) && (e[o] = t[o]);
  return e;
};
import n, { useState as V, useRef as P } from "react";
import a from "prop-types";
import _ from "@strapi/icons/Calendar";
import j from "@strapi/icons/Cross";
import { sizes as w } from "../themes/sizes.js";
import { TextInput as M } from "../TextInput/TextInput.js";
import { DatePickerWrapper as F, DatePickerButton as G, IconBox as H } from "./components.js";
import { DatePickerCalendar as J } from "./DatePickerCalendar.js";
import { formatDate as y } from "./utils/formatDate.js";
import { useId as K } from "../helpers/useId.js";
import { getDefaultLocale as N } from "../helpers/getDefaultLocale.js";
const I = (Q) => {
  var d = Q, {
    ariaLabel: t,
    initialDate: r,
    selectedDate: e,
    onChange: o,
    label: s,
    locale: L,
    selectedDateLabel: O,
    onClear: u,
    clearLabel: x,
    disabled: i,
    id: z
  } = d, B = R(d, [
    "ariaLabel",
    "initialDate",
    "selectedDate",
    "onChange",
    "label",
    "locale",
    "selectedDateLabel",
    "onClear",
    "clearLabel",
    "disabled",
    "id"
  ]);
  const T = K("datepicker", z), [m, p] = V(!1), l = P(null), b = P(null), g = L || N(), v = e ? y(e, g) : "", C = () => {
    i || p((f) => !f);
  }, W = () => {
    i || (u(), b.current.focus());
  }, q = (f) => {
    o(f), p(!1);
  }, A = () => {
    p(!1);
  };
  return /* @__PURE__ */ n.createElement(F, {
    bold: m
  }, /* @__PURE__ */ n.createElement(M, E({
    ref: l,
    onClick: C,
    onChange: () => {
    },
    value: v,
    startAction: /* @__PURE__ */ n.createElement(G, {
      ref: b,
      onClick: C,
      "aria-label": e ? O(y(e, g)) : s || t,
      type: "button",
      "aria-disabled": i
    }, /* @__PURE__ */ n.createElement(_, {
      "aria-hidden": !0
    })),
    endAction: u && v ? /* @__PURE__ */ n.createElement(H, {
      as: "button",
      onClick: W,
      "aria-label": x,
      "aria-disabled": i
    }, /* @__PURE__ */ n.createElement(j, null)) : void 0,
    "aria-autocomplete": "none",
    label: s,
    "aria-label": t,
    disabled: i,
    id: T
  }, B)), l.current && l.current.inputWrapperRef && m && /* @__PURE__ */ n.createElement(J, {
    selectedDate: e,
    initialDate: r,
    onChange: q,
    onEscape: A,
    popoverSource: l.current.inputWrapperRef,
    label: s || t
  }));
};
I.defaultProps = {
  ariaLabel: void 0,
  clearLabel: void 0,
  disabled: !1,
  id: void 0,
  label: void 0,
  locale: void 0,
  initialDate: new Date(),
  onClear: void 0,
  placeholder: void 0,
  selectedDate: void 0,
  size: "M"
};
I.propTypes = {
  ariaLabel: a.string,
  clearLabel: a.string,
  disabled: a.bool,
  id: a.string,
  initialDate: a.instanceOf(Date),
  label: a.string,
  locale: a.string,
  onChange: a.func.isRequired,
  onClear: a.func,
  placeholder: a.string,
  selectedDate: a.instanceOf(Date),
  selectedDateLabel: a.func.isRequired,
  size: a.oneOf(Object.keys(w.input))
};
export {
  I as DatePicker
};
