var x = Object.defineProperty;
var i = Object.getOwnPropertySymbols;
var c = Object.prototype.hasOwnProperty, l = Object.prototype.propertyIsEnumerable;
var n = (e, r, o) => r in e ? x(e, r, { enumerable: !0, configurable: !0, writable: !0, value: o }) : e[r] = o, p = (e, r) => {
  for (var o in r || (r = {}))
    c.call(r, o) && n(e, o, r[o]);
  if (i)
    for (var o of i(r))
      l.call(r, o) && n(e, o, r[o]);
  return e;
};
var m = (e, r) => {
  var o = {};
  for (var t in e)
    c.call(e, t) && r.indexOf(t) < 0 && (o[t] = e[t]);
  if (e != null && i)
    for (var t of i(e))
      r.indexOf(t) < 0 && l.call(e, t) && (o[t] = e[t]);
  return o;
};
import b, { useContext as S } from "react";
import u from "prop-types";
import w from "styled-components";
import { RadioContext as z } from "./context.js";
import { getRadioSize as f, getSelectedRadioSize as g, getSelectedRadioPosition as $ } from "./utils.js";
const C = w.input`
  margin: 0;
  padding: 0;
  background-color: ${({ theme: e }) => e.colors.neutral0};
  border: 1px solid ${({ theme: e }) => e.colors.primary600};
  border-radius: 50%;
  height: ${f};
  width: ${f};
  -webkit-appearance: none;

  &:after {
    border-radius: 50%;
    content: '';
    position: relative;
    z-index: 1;
    display: block;
    height: ${g};
    width: ${g};
    left: ${$};
    top: ${$};
  }

  &:checked:after {
    background: ${({ theme: e }) => e.colors.primary600};
  }

  &:disabled {
    border: 1px solid ${({ theme: e }) => e.colors.carbon300};
    background: ${({ theme: e }) => e.colors.neutral200};
  }
`, a = b.forwardRef((P, t) => {
  var s = P, { value: e, disabled: r } = s, o = m(s, ["value", "disabled"]);
  const { onChange: h, selected: R, name: k, size: y } = S(z), d = R === e;
  return /* @__PURE__ */ b.createElement(C, p({
    ref: t,
    type: "radio",
    name: k,
    value: e,
    tabIndex: d ? 0 : -1,
    "aria-checked": d,
    checked: d,
    disabled: r,
    size: y,
    onChange: h
  }, o));
});
a.displayName = "Radio";
a.defaultProps = {
  disabled: !1
};
a.propTypes = {
  disabled: u.bool,
  value: u.string.isRequired
};
export {
  a as BaseRadio
};
