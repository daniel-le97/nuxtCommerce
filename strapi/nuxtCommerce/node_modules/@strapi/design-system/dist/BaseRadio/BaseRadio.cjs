"use strict";var k=Object.defineProperty;var i=Object.getOwnPropertySymbols;var u=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var n=(e,o,t)=>o in e?k(e,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[o]=t,f=(e,o)=>{for(var t in o||(o={}))u.call(o,t)&&n(e,t,o[t]);if(i)for(var t of i(o))p.call(o,t)&&n(e,t,o[t]);return e};var b=(e,o)=>{var t={};for(var a in e)u.call(e,a)&&o.indexOf(a)<0&&(t[a]=e[a]);if(e!=null&&i)for(var a of i(e))o.indexOf(a)<0&&p.call(e,a)&&(t[a]=e[a]);return t};Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const R=require("react"),m=require("prop-types"),x=require("styled-components"),q=require("./context.cjs"),d=require("./utils.cjs"),c=e=>e&&typeof e=="object"&&"default"in e?e:{default:e},g=c(R),y=c(m),z=c(x),P=z.default.input`
  margin: 0;
  padding: 0;
  background-color: ${({theme:e})=>e.colors.neutral0};
  border: 1px solid ${({theme:e})=>e.colors.primary600};
  border-radius: 50%;
  height: ${d.getRadioSize};
  width: ${d.getRadioSize};
  -webkit-appearance: none;

  &:after {
    border-radius: 50%;
    content: '';
    position: relative;
    z-index: 1;
    display: block;
    height: ${d.getSelectedRadioSize};
    width: ${d.getSelectedRadioSize};
    left: ${d.getSelectedRadioPosition};
    top: ${d.getSelectedRadioPosition};
  }

  &:checked:after {
    background: ${({theme:e})=>e.colors.primary600};
  }

  &:disabled {
    border: 1px solid ${({theme:e})=>e.colors.carbon300};
    background: ${({theme:e})=>e.colors.neutral200};
  }
`,r=g.default.forwardRef((j,a)=>{var l=j,{value:e,disabled:o}=l,t=b(l,["value","disabled"]);const{onChange:S,selected:$,name:h,size:_}=R.useContext(q.RadioContext),s=$===e;return g.default.createElement(P,f({ref:a,type:"radio",name:h,value:e,tabIndex:s?0:-1,"aria-checked":s,checked:s,disabled:o,size:_,onChange:S},t))});r.displayName="Radio";r.defaultProps={disabled:!1};r.propTypes={disabled:y.default.bool,value:y.default.string.isRequired};exports.BaseRadio=r;
