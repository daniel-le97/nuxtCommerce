var b = Object.defineProperty;
var n = Object.getOwnPropertySymbols;
var l = Object.prototype.hasOwnProperty, f = Object.prototype.propertyIsEnumerable;
var u = (e, o, r) => o in e ? b(e, o, { enumerable: !0, configurable: !0, writable: !0, value: r }) : e[o] = r, p = (e, o) => {
  for (var r in o || (o = {}))
    l.call(o, r) && u(e, r, o[r]);
  if (n)
    for (var r of n(o))
      f.call(o, r) && u(e, r, o[r]);
  return e;
};
var m = (e, o) => {
  var r = {};
  for (var i in e)
    l.call(e, i) && o.indexOf(i) < 0 && (r[i] = e[i]);
  if (e != null && n)
    for (var i of n(e))
      o.indexOf(i) < 0 && f.call(e, i) && (r[i] = e[i]);
  return r;
};
import c, { useRef as q, useLayoutEffect as v } from "react";
import t from "prop-types";
import { RadioContext as x } from "./context.js";
import { setTabIndexOnFirstItem as E } from "../helpers/setTabIndexOnFirstItem.js";
const R = (P) => {
  var d = P, { children: e, labelledBy: o, onChange: r, value: i, size: g, name: s } = d, y = m(d, ["children", "labelledBy", "onChange", "value", "size", "name"]);
  const a = q(null);
  return v(() => {
    i || E(a.current, `[name="${s}"]`);
  }, [i, s]), /* @__PURE__ */ c.createElement(x.Provider, {
    value: { onChange: r, selected: i, name: s, size: g }
  }, /* @__PURE__ */ c.createElement("div", p({
    ref: a,
    role: "radiogroup",
    "aria-labelledby": o
  }, y), e));
};
R.defaultProps = {
  value: "",
  size: "M"
};
R.propTypes = {
  children: t.node.isRequired,
  labelledBy: t.string.isRequired,
  name: t.string.isRequired,
  onChange: t.func.isRequired,
  size: t.oneOf(["M", "L"]),
  value: t.string
};
export {
  R as RadioGroup
};
