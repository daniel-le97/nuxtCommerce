var S = Object.defineProperty;
var n = Object.getOwnPropertySymbols;
var c = Object.prototype.hasOwnProperty, m = Object.prototype.propertyIsEnumerable;
var i = (o, r, e) => r in o ? S(o, r, { enumerable: !0, configurable: !0, writable: !0, value: e }) : o[r] = e, u = (o, r) => {
  for (var e in r || (r = {}))
    c.call(r, e) && i(o, e, r[e]);
  if (n)
    for (var e of n(r))
      m.call(r, e) && i(o, e, r[e]);
  return o;
};
var g = (o, r) => {
  var e = {};
  for (var t in o)
    c.call(o, t) && r.indexOf(t) < 0 && (e[t] = o[t]);
  if (o != null && n)
    for (var t of n(o))
      r.indexOf(t) < 0 && m.call(o, t) && (e[t] = o[t]);
  return e;
};
import s from "react";
import a from "prop-types";
import f from "styled-components";
import { Box as k } from "../Box/Box.js";
import { Flex as w } from "../Flex/Flex.js";
import { Typography as x } from "../Typography/Typography.js";
const R = f.div`
  margin-right: ${({ theme: o }) => o.spaces[3]};
  width: ${6 / 16}rem;
  height: ${6 / 16}rem;
  border-radius: 50%;
  background: ${({ theme: o, backgroundColor: r }) => o.colors[r]};
`, T = f(k)`
  ${x} {
    color: ${({ theme: o, textColor: r }) => o.colors[r]};
  }
`, $ = (E) => {
  var d = E, { variant: o, showBullet: r, size: e, children: t } = d, h = g(d, ["variant", "showBullet", "size", "children"]);
  const b = `${o}100`, y = `${o}200`, B = `${o}600`, C = `${o}600`, l = e === "S" ? 2 : 5, p = e === "S" ? 1 : 4;
  return /* @__PURE__ */ s.createElement(T, u({
    borderColor: y,
    textColor: C,
    background: b,
    hasRadius: !0,
    paddingTop: p,
    paddingBottom: p,
    paddingLeft: l,
    paddingRight: l
  }, h), r ? /* @__PURE__ */ s.createElement(w, null, /* @__PURE__ */ s.createElement(R, {
    backgroundColor: B
  }), t) : t);
};
$.defaultProps = {
  showBullet: !0,
  size: "M",
  variant: "primary"
};
$.propTypes = {
  children: a.node.isRequired,
  showBullet: a.bool,
  size: a.oneOf(["S", "M"]),
  variant: a.oneOf(["alternative", "danger", "neutral", "primary", "secondary", "success", "warning"])
};
export {
  $ as Status
};
