var m = Object.defineProperty;
var t = Object.getOwnPropertySymbols;
var a = Object.prototype.hasOwnProperty, d = Object.prototype.propertyIsEnumerable;
var p = (e, o, r) => o in e ? m(e, o, { enumerable: !0, configurable: !0, writable: !0, value: r }) : e[o] = r, n = (e, o) => {
  for (var r in o || (o = {}))
    a.call(o, r) && p(e, r, o[r]);
  if (t)
    for (var r of t(o))
      d.call(o, r) && p(e, r, o[r]);
  return e;
};
var c = (e, o) => {
  var r = {};
  for (var l in e)
    a.call(e, l) && o.indexOf(l) < 0 && (r[l] = e[l]);
  if (e != null && t)
    for (var l of t(e))
      o.indexOf(l) < 0 && d.call(e, l) && (r[l] = e[l]);
  return r;
};
import u from "react";
import i from "prop-types";
import y from "styled-components";
import { Flex as x } from "../Flex/Flex.js";
const b = y(x)`
  display: ${({ selected: e }) => e ? "flex" : "none"};
`, f = (g) => {
  var s = g, { label: e, children: o, selected: r } = s, l = c(s, ["label", "children", "selected"]);
  return /* @__PURE__ */ u.createElement(b, n({
    selected: r,
    role: "group",
    "aria-roledescription": "slide",
    "aria-label": e,
    justifyContent: "center",
    height: "124px"
  }, l), o);
};
f.defaultProps = {
  selected: !1
};
f.propTypes = {
  children: i.node.isRequired,
  label: i.string.isRequired,
  selected: i.bool
};
export {
  f as CarouselSlide
};
