var I = Object.defineProperty, O = Object.defineProperties;
var P = Object.getOwnPropertyDescriptors;
var s = Object.getOwnPropertySymbols;
var v = Object.prototype.hasOwnProperty, R = Object.prototype.propertyIsEnumerable;
var b = (e, r, t) => r in e ? I(e, r, { enumerable: !0, configurable: !0, writable: !0, value: t }) : e[r] = t, E = (e, r) => {
  for (var t in r || (r = {}))
    v.call(r, t) && b(e, t, r[t]);
  if (s)
    for (var t of s(r))
      R.call(r, t) && b(e, t, r[t]);
  return e;
}, C = (e, r) => O(e, P(r));
var x = (e, r) => {
  var t = {};
  for (var n in e)
    v.call(e, n) && r.indexOf(n) < 0 && (t[n] = e[n]);
  if (e != null && s)
    for (var n of s(e))
      r.indexOf(n) < 0 && R.call(e, n) && (t[n] = e[n]);
  return t;
};
import i, { useRef as q, Children as S, cloneElement as _ } from "react";
import o from "prop-types";
import c from "styled-components";
import $ from "@strapi/icons/ChevronRight";
import j from "@strapi/icons/ChevronLeft";
import { Icon as A } from "../Icon/Icon.js";
import { Box as l } from "../Box/Box.js";
import { Typography as B } from "../Typography/Typography.js";
import { Flex as H } from "../Flex/Flex.js";
import { Tooltip as z } from "../Tooltip/Tooltip.js";
import { KeyboardKeys as T } from "../helpers/keyboardKeys.js";
const J = c(l)`
  display: grid;
  grid-template-columns: auto 1fr auto;
  grid-template-areas: 'startAction slides endAction';
`, M = c(l)`
  grid-area: slides;
`, w = c.button`
  grid-area: ${({ area: e }) => e};

  &:focus svg path,
  &:hover svg path {
    fill: ${({ theme: e }) => e.colors.neutral900};
  }
`, k = (N) => {
  var m = N, {
    actions: e,
    children: r,
    label: t,
    nextLabel: n,
    onNext: p,
    onPrevious: u,
    previousLabel: L,
    secondaryLabel: d,
    selectedSlide: D
  } = m, K = x(m, [
    "actions",
    "children",
    "label",
    "nextLabel",
    "onNext",
    "onPrevious",
    "previousLabel",
    "secondaryLabel",
    "selectedSlide"
  ]);
  const f = q(null), h = q(null), g = S.toArray(r).map(
    (a, G) => _(a, { selected: G === D })
  ), F = (a) => {
    switch (a.key) {
      case T.RIGHT: {
        a.preventDefault(), h.current.focus(), p();
        break;
      }
      case T.LEFT: {
        a.preventDefault(), f.current.focus(), u();
        break;
      }
    }
  }, y = g.length > 1;
  return /* @__PURE__ */ i.createElement(l, C(E({}, K), {
    onKeyDown: F
  }), /* @__PURE__ */ i.createElement(l, {
    padding: 2,
    borderColor: "neutral200",
    hasRadius: !0,
    background: "neutral100"
  }, /* @__PURE__ */ i.createElement(J, {
    as: "section",
    "aria-roledescription": "carousel",
    "aria-label": t,
    position: "relative"
  }, y && /* @__PURE__ */ i.createElement(w, {
    onClick: u,
    area: "startAction",
    ref: f,
    "aria-label": L,
    type: "button"
  }, /* @__PURE__ */ i.createElement(A, {
    as: j,
    "aria-hidden": !0,
    width: "6px",
    height: "10px",
    color: "neutral600"
  })), y && /* @__PURE__ */ i.createElement(w, {
    onClick: p,
    area: "endAction",
    ref: h,
    "aria-label": n,
    type: "button"
  }, /* @__PURE__ */ i.createElement(A, {
    as: $,
    "aria-hidden": !0,
    width: "6px",
    height: "10px",
    color: "neutral600"
  })), /* @__PURE__ */ i.createElement(M, {
    "aria-live": "polite",
    paddingLeft: 2,
    paddingRight: 2,
    width: "100%",
    overflow: "hidden"
  }, g), e), d && /* @__PURE__ */ i.createElement(l, {
    paddingTop: 2,
    paddingLeft: 4,
    paddingRight: 4
  }, /* @__PURE__ */ i.createElement(z, {
    label: d
  }, /* @__PURE__ */ i.createElement(H, {
    justifyContent: "center"
  }, /* @__PURE__ */ i.createElement(B, {
    variant: "pi",
    textColor: "neutral600",
    ellipsis: !0
  }, d))))));
};
k.defaultProps = {
  actions: void 0,
  error: void 0,
  hint: void 0,
  required: !1,
  secondaryLabel: void 0
};
k.propTypes = {
  actions: o.node,
  children: o.node.isRequired,
  error: o.string,
  hint: o.oneOfType([o.string, o.node, o.arrayOf(o.node)]),
  label: o.string.isRequired,
  nextLabel: o.string.isRequired,
  onNext: o.func.isRequired,
  onPrevious: o.func.isRequired,
  previousLabel: o.string.isRequired,
  required: o.bool,
  secondaryLabel: o.string,
  selectedSlide: o.number.isRequired
};
export {
  k as Carousel
};
