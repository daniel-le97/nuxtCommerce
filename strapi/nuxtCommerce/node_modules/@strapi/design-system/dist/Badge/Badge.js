var h = Object.defineProperty;
var n = Object.getOwnPropertySymbols;
var m = Object.prototype.hasOwnProperty, s = Object.prototype.propertyIsEnumerable;
var p = (e, r, t) => r in e ? h(e, r, { enumerable: !0, configurable: !0, writable: !0, value: t }) : e[r] = t, l = (e, r) => {
  for (var t in r || (r = {}))
    m.call(r, t) && p(e, t, r[t]);
  if (n)
    for (var t of n(r))
      s.call(r, t) && p(e, t, r[t]);
  return e;
};
var g = (e, r) => {
  var t = {};
  for (var o in e)
    m.call(e, o) && r.indexOf(o) < 0 && (t[o] = e[o]);
  if (e != null && n)
    for (var o of n(e))
      r.indexOf(o) < 0 && s.call(e, o) && (t[o] = e[o]);
  return t;
};
import u from "react";
import i from "prop-types";
import x from "styled-components";
import { Flex as C } from "../Flex/Flex.js";
import { Typography as R } from "../Typography/Typography.js";
const T = x(C)`
  border-radius: ${({ theme: e, size: r }) => r === "S" ? "2px" : e.borderRadius};
  height: ${({ size: e, theme: r }) => r.sizes.badge[e]};
`, c = (k) => {
  var a = k, { active: e, size: r, textColor: t, backgroundColor: o, children: f, minWidth: b } = a, y = g(a, ["active", "size", "textColor", "backgroundColor", "children", "minWidth"]);
  const d = r === "S" ? 1 : 2;
  return /* @__PURE__ */ u.createElement(T, l({
    inline: !0,
    alignItem: "center",
    justifyContent: "center",
    minWidth: b,
    paddingLeft: d,
    paddingRight: d,
    background: e ? "primary200" : o,
    size: r
  }, y), /* @__PURE__ */ u.createElement(R, {
    variant: "sigma",
    textColor: e ? "primary600" : t
  }, f));
};
c.defaultProps = {
  active: !1,
  backgroundColor: "neutral150",
  minWidth: 5,
  size: "M",
  textColor: "neutral600"
};
c.propTypes = {
  active: i.bool,
  backgroundColor: i.string,
  children: i.oneOfType([i.number, i.string]).isRequired,
  minWidth: i.number,
  size: i.oneOf(["S", "M"]),
  textColor: i.string
};
export {
  c as Badge
};
