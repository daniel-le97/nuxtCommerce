"use strict";var q=Object.defineProperty;var s=Object.getOwnPropertySymbols;var y=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable;var g=(e,a,t)=>a in e?q(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,d=(e,a)=>{for(var t in a||(a={}))y.call(a,t)&&g(e,t,a[t]);if(s)for(var t of s(a))m.call(a,t)&&g(e,t,a[t]);return e};var h=(e,a)=>{var t={};for(var o in e)y.call(e,o)&&a.indexOf(o)<0&&(t[o]=e[o]);if(e!=null&&s)for(var o of s(e))a.indexOf(o)<0&&m.call(e,o)&&(t[o]=e[o]);return t};Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const j=require("react"),E=require("styled-components"),k=require("prop-types"),B=require("react-router-dom"),N=require("../Box/Box.cjs"),x=require("../Flex/Flex.cjs"),l=require("../Typography/Typography.cjs"),R=require("./MainNavContext.cjs"),_=require("../Tooltip/Tooltip.cjs"),L=require("../Badge/Badge.cjs"),u=e=>e&&typeof e=="object"&&"default"in e?e:{default:e},r=u(j),i=u(E),n=u(k),$=i.default(N.Box)`
  svg {
    width: 1rem;
    height: 1rem;
  }
`,v=i.default(B.NavLink)`
  position: relative;
  text-decoration: none;
  display: block;
  border-radius: ${({theme:e})=>e.borderRadius};
  background: ${({theme:e})=>e.colors.neutral0};

  ${l.Typography} {
    color: ${({theme:e})=>e.colors.neutral600};
  }

  svg path {
    fill: ${({theme:e})=>e.colors.neutral500};
  }

  &:hover {
    background: ${({theme:e})=>e.colors.neutral100};

    ${l.Typography} {
      color: ${({theme:e})=>e.colors.neutral700};
    }

    svg path {
      fill: ${({theme:e})=>e.colors.neutral600};
    }
  }

  &.active {
    background: ${({theme:e})=>e.colors.primary100};

    svg path {
      fill: ${({theme:e})=>e.colors.primary600};
    }

    ${l.Typography} {
      color: ${({theme:e})=>e.colors.primary600};
      font-weight: 500;
    }
  }
`,b=i.default(x.Flex)`
  padding: ${({theme:e})=>`${e.spaces[2]} ${e.spaces[3]}`};
`,T=i.default(L.Badge)`
  ${({condensed:e})=>e&&`
	  position: absolute;
    transform: translate(35%, -50%);
    top: 0;
    right: 0;
  `}

  ${l.Typography} {
    //find a solution to remove !important
    color: ${({theme:e})=>e.colors.neutral0} !important;
    line-height: 0;
  }

  display: flex;
  justify-content: center;
  align-items: center;
  min-width: ${({theme:e})=>e.spaces[6]};
  height: ${({theme:e})=>e.spaces[5]};
  padding: ${({theme:e})=>`0 ${e.spaces[2]}`};
  border-radius: ${({theme:e})=>e.spaces[10]};
  background: ${({theme:e})=>e.colors.primary600};
`,c=M=>{var f=M,{children:e,icon:a,badgeContent:t,badgeAriaLabel:o}=f,p=h(f,["children","icon","badgeContent","badgeAriaLabel"]);return R.useMainNav()?r.default.createElement(_.Tooltip,{position:"right",label:e},r.default.createElement(v,d({},p),r.default.createElement(b,{as:"span"},r.default.createElement($,{"aria-hidden":!0,paddingRight:0,as:"span"},a),t&&r.default.createElement(T,{condensed:!0,"aria-label":o},t)))):r.default.createElement(v,d({},p),r.default.createElement(b,{as:"span",justifyContent:"space-between"},r.default.createElement(x.Flex,null,r.default.createElement($,{"aria-hidden":!0,paddingRight:3,as:"span"},a),r.default.createElement(l.Typography,null,e)),t&&r.default.createElement(T,{justifyContent:"center","aria-label":o},t)))};c.displayName="NavLink";c.defaultProps={badgeContent:void 0,badgeAriaLabel:void 0};c.propTypes={badgeAriaLabel:n.default.string,badgeContent:n.default.oneOfType([n.default.string,n.default.number]),children:n.default.node.isRequired,icon:n.default.node.isRequired};exports.NavLink=c;
