var T = Object.defineProperty;
var i = Object.getOwnPropertySymbols;
var c = Object.prototype.hasOwnProperty, u = Object.prototype.propertyIsEnumerable;
var f = (e, r, t) => r in e ? T(e, r, { enumerable: !0, configurable: !0, writable: !0, value: t }) : e[r] = t, g = (e, r) => {
  for (var t in r || (r = {}))
    c.call(r, t) && f(e, t, r[t]);
  if (i)
    for (var t of i(r))
      u.call(r, t) && f(e, t, r[t]);
  return e;
};
var y = (e, r) => {
  var t = {};
  for (var o in e)
    c.call(e, o) && r.indexOf(o) < 0 && (t[o] = e[o]);
  if (e != null && i)
    for (var o of i(e))
      r.indexOf(o) < 0 && u.call(e, o) && (t[o] = e[o]);
  return t;
};
import a from "react";
import n from "prop-types";
import v, { keyframes as k } from "styled-components";
import $ from "@strapi/icons/Loader";
import { Box as b } from "../Box/Box.js";
import { Typography as B } from "../Typography/Typography.js";
import { Flex as C } from "../Flex/Flex.js";
import { buttonFocusStyle as R } from "../themes/utils.js";
const L = k`
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
`, w = v.div`
  animation: ${L} 2s infinite linear;
  will-change: transform;
`, F = v(C)`
  background: transparent;
  border: none;

  &[aria-disabled='true'] {
    pointer-events: none;
    svg path {
      fill: ${({ theme: e }) => e.colors.neutral600};
    }
  }

  svg {
    display: flex;
    font-size: ${10 / 16}rem;
  }

  svg path {
    fill: ${({ theme: e }) => e.colors.primary600};
  }

  ${R}
`, s = a.forwardRef(
  (I, x) => {
    var p = I, { children: e, startIcon: r, endIcon: t, onClick: o, disabled: d, loading: l } = p, h = y(p, ["children", "startIcon", "endIcon", "onClick", "disabled", "loading"]);
    const E = o && !d ? o : void 0, m = d || l;
    return /* @__PURE__ */ a.createElement(F, g({
      ref: x,
      "aria-disabled": m,
      onClick: E,
      as: "button",
      type: "button"
    }, h), (r || l) && /* @__PURE__ */ a.createElement(b, {
      as: "span",
      paddingRight: 2,
      "aria-hidden": !0
    }, l ? /* @__PURE__ */ a.createElement(w, null, /* @__PURE__ */ a.createElement($, null)) : r), /* @__PURE__ */ a.createElement(B, {
      variant: "pi",
      textColor: m ? "neutral600" : "primary600"
    }, e), t && /* @__PURE__ */ a.createElement(b, {
      as: "span",
      paddingLeft: 2,
      "aria-hidden": !0
    }, t));
  }
);
s.displayName = "TextButton";
s.defaultProps = {
  disabled: !1,
  startIcon: void 0,
  endIcon: void 0,
  loading: !1,
  onClick: void 0
};
s.propTypes = {
  children: n.node.isRequired,
  disabled: n.bool,
  endIcon: n.element,
  loading: n.bool,
  onClick: n.func,
  startIcon: n.element
};
export {
  s as TextButton
};
