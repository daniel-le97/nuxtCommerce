var v = Object.defineProperty;
var i = Object.getOwnPropertySymbols;
var d = Object.prototype.hasOwnProperty, u = Object.prototype.propertyIsEnumerable;
var m = (e, r, o) => r in e ? v(e, r, { enumerable: !0, configurable: !0, writable: !0, value: o }) : e[r] = o, f = (e, r) => {
  for (var o in r || (r = {}))
    d.call(r, o) && m(e, o, r[o]);
  if (i)
    for (var o of i(r))
      u.call(r, o) && m(e, o, r[o]);
  return e;
};
var g = (e, r) => {
  var o = {};
  for (var t in e)
    d.call(e, t) && r.indexOf(t) < 0 && (o[t] = e[t]);
  if (e != null && i)
    for (var t of i(e))
      r.indexOf(t) < 0 && u.call(e, t) && (o[t] = e[t]);
  return o;
};
import l from "react";
import n from "prop-types";
import p from "styled-components";
import E from "@strapi/icons/Dot";
import { NavLink as x } from "react-router-dom";
import { Box as a } from "../Box/Box.js";
import { Typography as b } from "../Typography/Typography.js";
import { Flex as $ } from "../Flex/Flex.js";
const S = p(a)`
  display: flex;
  align-items: center;
  justify-content: space-between;
  text-decoration: none;
  color: ${({ theme: e }) => e.colors.neutral800};
  svg > * {
    fill: ${({ theme: e }) => e.colors.neutral600};
  }

  &.active {
    ${({ theme: e }) => `
      background-color: ${e.colors.primary100};
      border-right: 2px solid ${e.colors.primary600};
      svg > * {
        fill: ${e.colors.primary700};
      }
      ${b} {
        color: ${e.colors.primary700};
        font-weight: 500;
      }
      `}
  }

  &:focus-visible {
    outline-offset: -2px;
  }
`, y = p(E)`
  width: ${12 / 16}rem;
  height: ${4 / 16}rem;
  * {
    fill: ${({ theme: e, $active: r }) => r ? e.colors.primary600 : e.colors.neutral600};
  }
`, k = p.div`
  svg {
    height: ${12 / 16}rem;
    width: ${12 / 16}rem;
  }
`, s = (w) => {
  var c = w, { children: e, icon: r, withBullet: o, isSubSectionChild: t } = c, h = g(c, ["children", "icon", "withBullet", "isSubSectionChild"]);
  return /* @__PURE__ */ l.createElement(S, f({
    as: x,
    icon: r,
    background: "neutral100",
    paddingLeft: t ? 9 : 7,
    paddingBottom: 2,
    paddingTop: 2
  }, h), /* @__PURE__ */ l.createElement($, null, r ? /* @__PURE__ */ l.createElement(k, null, r) : /* @__PURE__ */ l.createElement(y, null), /* @__PURE__ */ l.createElement(a, {
    paddingLeft: 2
  }, /* @__PURE__ */ l.createElement(b, {
    as: "span"
  }, e))), o && /* @__PURE__ */ l.createElement(a, {
    as: $,
    paddingRight: 4
  }, /* @__PURE__ */ l.createElement(y, {
    $active: !0
  })));
};
s.displayName = "SubNavLink";
s.defaultProps = {
  icon: null,
  isSubSectionChild: !1,
  withBullet: !1
};
s.propTypes = {
  children: n.node.isRequired,
  icon: n.element,
  isSubSectionChild: n.bool,
  withBullet: n.bool
};
export {
  s as SubNavLink
};
