var f = Object.defineProperty;
var i = Object.getOwnPropertySymbols;
var l = Object.prototype.hasOwnProperty, a = Object.prototype.propertyIsEnumerable;
var n = (r, o, e) => o in r ? f(r, o, { enumerable: !0, configurable: !0, writable: !0, value: e }) : r[o] = e, p = (r, o) => {
  for (var e in o || (o = {}))
    l.call(o, e) && n(r, e, o[e]);
  if (i)
    for (var e of i(o))
      a.call(o, e) && n(r, e, o[e]);
  return r;
};
import g from "react";
import t from "prop-types";
import { TEXT_VARIANTS as m, OMEGA as y } from "./constants.js";
const s = (r) => /* @__PURE__ */ g.createElement("div", p({}, r)), T = {
  ellipsis: !1,
  fontWeight: void 0,
  fontSize: void 0,
  lineHeight: void 0,
  textColor: void 0,
  textAlign: void 0,
  textTransform: void 0,
  variant: y
}, d = {
  ellipsis: t.bool,
  fontSize: t.oneOfType([t.number, t.string]),
  fontWeight: t.string,
  lineHeight: t.oneOfType([t.number, t.string]),
  textAlign: t.string,
  textColor: t.string,
  textTransform: t.string,
  variant: t.oneOf(m)
};
s.defaultProps = T;
s.propTypes = d;
export {
  s as TypographyProps,
  T as typographyDefaultProps,
  d as typographyPropTypes
};
