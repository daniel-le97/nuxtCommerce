var j = Object.defineProperty;
var p = Object.getOwnPropertySymbols;
var g = Object.prototype.hasOwnProperty, y = Object.prototype.propertyIsEnumerable;
var h = (t, o, r) => o in t ? j(t, o, { enumerable: !0, configurable: !0, writable: !0, value: r }) : t[o] = r, v = (t, o) => {
  for (var r in o || (o = {}))
    g.call(o, r) && h(t, r, o[r]);
  if (p)
    for (var r of p(o))
      y.call(o, r) && h(t, r, o[r]);
  return t;
};
var T = (t, o) => {
  var r = {};
  for (var s in t)
    g.call(t, s) && o.indexOf(s) < 0 && (r[s] = t[s]);
  if (t != null && p)
    for (var s of p(t))
      o.indexOf(s) < 0 && y.call(t, s) && (r[s] = t[s]);
  return r;
};
import m from "react";
import e from "prop-types";
import H from "@strapi/icons/Clock";
import L from "styled-components";
import { sizes as S } from "../themes/sizes.js";
import { Select as V } from "../Select/Select.js";
import { Option as W } from "../Select/Option.js";
import "../Select/OptGroup.js";
import "../Select/MultiSelectNested.js";
import "../Select/SelectList.js";
import { useId as A } from "../helpers/useId.js";
const D = L.div`
  display: flex;
  align-items: center;
  svg {
    height: 1rem;
    width: 1rem;
  }

  svg path {
    fill: ${({ theme: t }) => t.colors.neutral500};
  }
`, O = (F) => {
  var f = F, {
    disabled: t,
    error: o,
    hint: r,
    id: s,
    onClear: $,
    onChange: C,
    value: c,
    clearLabel: M,
    label: k,
    required: q,
    selectButtonTitle: E,
    step: I,
    size: z
  } = f, P = T(f, [
    "disabled",
    "error",
    "hint",
    "id",
    "onClear",
    "onChange",
    "value",
    "clearLabel",
    "label",
    "required",
    "selectButtonTitle",
    "step",
    "size"
  ]);
  const R = A("timepicker", s), w = 24, n = [];
  let l = 0;
  for (let i = 0; i < w; i++)
    for (l = 0; l < 60; )
      n.push(`${i < 10 ? `0${i}` : i}:${l < 10 ? `0${l}` : l}`), l += I;
  const x = () => {
    const i = c.split(":")[0], b = c.split(":")[1], B = n.reduce((a, d) => {
      const u = d.split(":")[0];
      return Math.abs(u - i) < Math.abs(a - i) ? u : a;
    }, n[0].split(":")[0]), _ = n.reduce((a, d) => {
      const u = d.split(":")[1];
      return Math.abs(u - b) < Math.abs(a - b) ? u : a;
    }, n[0].split(":")[1]);
    return `${B}:${_}`;
  };
  return /* @__PURE__ */ m.createElement(V, v({
    id: R,
    label: k,
    placeholder: "--:--",
    hint: r,
    onClear: $,
    clearLabel: M,
    error: o,
    value: c ? x() : null,
    size: z,
    onChange: C,
    disabled: t,
    required: q,
    selectButtonTitle: E,
    startIcon: /* @__PURE__ */ m.createElement(D, null, /* @__PURE__ */ m.createElement(H, null))
  }, P), n.map((i) => /* @__PURE__ */ m.createElement(W, {
    value: i,
    key: i
  }, i)));
};
O.defaultProps = {
  disabled: !1,
  error: void 0,
  hint: void 0,
  id: void 0,
  label: void 0,
  onClear: void 0,
  required: !1,
  size: "M",
  selectButtonTitle: void 0,
  step: 15,
  value: void 0
};
O.propTypes = {
  clearLabel: e.string.isRequired,
  disabled: e.bool,
  error: e.oneOfType([e.string, e.bool]),
  hint: e.oneOfType([e.string, e.node, e.arrayOf(e.node)]),
  id: e.oneOfType([e.string, e.number]),
  label: e.string,
  onChange: e.func.isRequired,
  onClear: e.func,
  required: e.bool,
  selectButtonTitle: e.string,
  size: e.oneOf(Object.keys(S.input)),
  step: e.number,
  value: e.oneOfType([
    e.arrayOf(e.oneOfType([e.string, e.number])),
    e.string,
    e.number
  ])
};
export {
  O as TimePicker
};
