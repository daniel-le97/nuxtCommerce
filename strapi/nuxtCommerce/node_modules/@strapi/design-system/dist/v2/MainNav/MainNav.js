var c = Object.defineProperty;
var a = Object.getOwnPropertySymbols;
var n = Object.prototype.hasOwnProperty, p = Object.prototype.propertyIsEnumerable;
var i = (o, r, e) => r in o ? c(o, r, { enumerable: !0, configurable: !0, writable: !0, value: e }) : o[r] = e, m = (o, r) => {
  for (var e in r || (r = {}))
    n.call(r, e) && i(o, e, r[e]);
  if (a)
    for (var e of a(r))
      p.call(r, e) && i(o, e, r[e]);
  return o;
};
var s = (o, r) => {
  var e = {};
  for (var t in o)
    n.call(o, t) && r.indexOf(t) < 0 && (e[t] = o[t]);
  if (o != null && a)
    for (var t of a(o))
      r.indexOf(t) < 0 && p.call(o, t) && (e[t] = o[t]);
  return e;
};
import l from "react";
import f from "styled-components";
import u from "prop-types";
import { Grid as v } from "../../Grid/Grid.js";
import "../../Grid/GridItem.js";
import { MainNavContext as h } from "./MainNavContext.js";
const x = f(v)`
  width: ${({ condensed: o }) => o ? "max-content" : `${224 / 16}rem`};
  background: ${({ theme: o }) => o.colors.neutral0};
  position: sticky;
  top: 0;
  height: 100vh;
  z-index: 2;
  border-right: 1px solid ${({ theme: o }) => o.colors.neutral150};
`, d = (e) => {
  var t = e, { condensed: o } = t, r = s(t, ["condensed"]);
  return /* @__PURE__ */ l.createElement(h.Provider, {
    value: o
  }, /* @__PURE__ */ l.createElement(x, m({
    as: "nav",
    condensed: o
  }, r)));
};
d.defaultProps = {
  condensed: !1
};
d.propTypes = {
  condensed: u.bool
};
export {
  d as MainNav
};
