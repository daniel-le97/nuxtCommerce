var y = Object.defineProperty;
var i = Object.getOwnPropertySymbols;
var u = Object.prototype.hasOwnProperty, g = Object.prototype.propertyIsEnumerable;
var c = (e, r, t) => r in e ? y(e, r, { enumerable: !0, configurable: !0, writable: !0, value: t }) : e[r] = t, d = (e, r) => {
  for (var t in r || (r = {}))
    u.call(r, t) && c(e, t, r[t]);
  if (i)
    for (var t of i(r))
      g.call(r, t) && c(e, t, r[t]);
  return e;
};
var f = (e, r) => {
  var t = {};
  for (var a in e)
    u.call(e, a) && r.indexOf(a) < 0 && (t[a] = e[a]);
  if (e != null && i)
    for (var a of i(e))
      r.indexOf(a) < 0 && g.call(e, a) && (t[a] = e[a]);
  return t;
};
import n from "react";
import o from "prop-types";
import v from "styled-components";
import { Box as m } from "../../Box/Box.js";
import { Typography as E } from "../../Typography/Typography.js";
import { Flex as B } from "../../Flex/Flex.js";
import { useMainNav as $ } from "./MainNavContext.js";
import { VisuallyHidden as h } from "../../VisuallyHidden/VisuallyHidden.js";
import { BaseLink as x } from "../../BaseLink/BaseLink.js";
const R = v.div`
  border-radius: ${({ theme: e }) => e.borderRadius};

  svg,
  img {
    height: ${({ condensed: e }) => e ? `${40 / 16}rem` : `${32 / 16}rem`};
    width: ${({ condensed: e }) => e ? `${40 / 16}rem` : `${32 / 16}rem`};
  }
`, L = v(x)`
  text-decoration: unset;
  color: inherit;
`, p = n.forwardRef((N, l) => {
  var s = N, { workplace: e, title: r, icon: t } = s, a = f(s, ["workplace", "title", "icon"]);
  return $() ? /* @__PURE__ */ n.createElement(x, d({
    ref: l
  }, a), /* @__PURE__ */ n.createElement(m, {
    paddingLeft: 3,
    paddingRight: 3,
    paddingTop: 4,
    paddingBottom: 4
  }, /* @__PURE__ */ n.createElement(R, {
    condensed: !0
  }, t, /* @__PURE__ */ n.createElement(h, null, /* @__PURE__ */ n.createElement("span", null, r), /* @__PURE__ */ n.createElement("span", null, e))))) : /* @__PURE__ */ n.createElement(L, d({
    ref: l
  }, a), /* @__PURE__ */ n.createElement(m, {
    paddingLeft: 3,
    paddingRight: 3,
    paddingTop: 4,
    paddingBottom: 4
  }, /* @__PURE__ */ n.createElement(B, null, /* @__PURE__ */ n.createElement(R, {
    "aria-hidden": !0,
    tabIndex: -1
  }, t), /* @__PURE__ */ n.createElement(m, {
    paddingLeft: 2
  }, /* @__PURE__ */ n.createElement(E, {
    fontWeight: "bold",
    textColor: "neutral800",
    as: "span"
  }, r, /* @__PURE__ */ n.createElement(h, {
    as: "span"
  }, e)), /* @__PURE__ */ n.createElement(E, {
    variant: "pi",
    as: "p",
    textColor: "neutral600",
    "aria-hidden": !0
  }, e)))));
});
p.displayName = "NavBrand";
p.defaultProps = {
  to: "/"
};
p.propTypes = {
  icon: o.node.isRequired,
  title: o.string.isRequired,
  to: o.string,
  workplace: o.string.isRequired
};
export {
  p as NavBrand
};
