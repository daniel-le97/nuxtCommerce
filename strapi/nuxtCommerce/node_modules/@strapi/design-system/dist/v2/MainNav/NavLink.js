var R = Object.defineProperty;
var s = Object.getOwnPropertySymbols;
var f = Object.prototype.hasOwnProperty, $ = Object.prototype.propertyIsEnumerable;
var g = (e, t, r) => t in e ? R(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r }) : e[t] = r, c = (e, t) => {
  for (var r in t || (t = {}))
    f.call(t, r) && g(e, r, t[r]);
  if (s)
    for (var r of s(t))
      $.call(t, r) && g(e, r, t[r]);
  return e;
};
var h = (e, t) => {
  var r = {};
  for (var o in e)
    f.call(e, o) && t.indexOf(o) < 0 && (r[o] = e[o]);
  if (e != null && s)
    for (var o of s(e))
      t.indexOf(o) < 0 && $.call(e, o) && (r[o] = e[o]);
  return r;
};
import a from "react";
import l from "styled-components";
import n from "prop-types";
import { Box as w } from "../../Box/Box.js";
import { Flex as k } from "../../Flex/Flex.js";
import { Typography as i } from "../../Typography/Typography.js";
import { useMainNav as x } from "./MainNavContext.js";
import { Tooltip as N } from "../../Tooltip/Tooltip.js";
import { Badge as B } from "../../Badge/Badge.js";
import { BaseLink as L } from "../../BaseLink/BaseLink.js";
const y = l(w)`
  svg {
    width: 1rem;
    height: 1rem;
  }
`, b = l(L)`
  position: relative;
  text-decoration: none;
  display: block;
  border-radius: ${({ theme: e }) => e.borderRadius};
  background: ${({ theme: e }) => e.colors.neutral0};

  ${i} {
    color: ${({ theme: e }) => e.colors.neutral600};
  }

  svg path {
    fill: ${({ theme: e }) => e.colors.neutral500};
  }

  &:hover {
    background: ${({ theme: e }) => e.colors.neutral100};

    ${i} {
      color: ${({ theme: e }) => e.colors.neutral700};
    }

    svg path {
      fill: ${({ theme: e }) => e.colors.neutral600};
    }
  }

  &.active {
    background: ${({ theme: e }) => e.colors.primary100};

    svg path {
      fill: ${({ theme: e }) => e.colors.primary600};
    }

    ${i} {
      color: ${({ theme: e }) => e.colors.primary600};
      font-weight: 500;
    }
  }
`, v = l(k)`
  padding: ${({ theme: e }) => `${e.spaces[2]} ${e.spaces[3]}`};
`, E = l(B)`
  ${({ condensed: e }) => e && `
	  position: absolute;
    transform: translate(35%, -50%);
    top: 0;
    right: 0;
  `}

  ${i} {
    //find a solution to remove !important
    color: ${({ theme: e }) => e.colors.neutral0} !important;
    line-height: 0;
  }

  display: flex;
  justify-content: center;
  align-items: center;
  min-width: ${({ theme: e }) => e.spaces[6]};
  height: ${({ theme: e }) => e.spaces[5]};
  padding: ${({ theme: e }) => `0 ${e.spaces[2]}`};
  border-radius: ${({ theme: e }) => e.spaces[10]};
  background: ${({ theme: e }) => e.colors.primary600};
`, p = a.forwardRef((T, m) => {
  var u = T, { children: e, icon: t, badgeContent: r, badgeAriaLabel: o } = u, d = h(u, ["children", "icon", "badgeContent", "badgeAriaLabel"]);
  return x() ? /* @__PURE__ */ a.createElement(b, c({
    ref: m
  }, d), /* @__PURE__ */ a.createElement(N, {
    position: "right",
    label: e
  }, /* @__PURE__ */ a.createElement(v, {
    as: "span",
    justifyContent: "center"
  }, /* @__PURE__ */ a.createElement(y, {
    "aria-hidden": !0,
    paddingRight: 0,
    as: "span"
  }, t), r && /* @__PURE__ */ a.createElement(E, {
    condensed: !0,
    "aria-label": o
  }, r)))) : /* @__PURE__ */ a.createElement(b, c({
    ref: m
  }, d), /* @__PURE__ */ a.createElement(v, {
    as: "span",
    justifyContent: "space-between"
  }, /* @__PURE__ */ a.createElement(k, null, /* @__PURE__ */ a.createElement(y, {
    "aria-hidden": !0,
    paddingRight: 3,
    as: "span"
  }, t), /* @__PURE__ */ a.createElement(i, null, e)), r && /* @__PURE__ */ a.createElement(E, {
    justifyContent: "center",
    "aria-label": o
  }, r)));
});
p.displayName = "NavLink";
p.defaultProps = {
  badgeContent: void 0,
  badgeAriaLabel: void 0
};
p.propTypes = {
  badgeAriaLabel: n.string,
  badgeContent: n.oneOfType([n.string, n.number]),
  children: n.string.isRequired,
  icon: n.node.isRequired
};
export {
  p as NavLink
};
