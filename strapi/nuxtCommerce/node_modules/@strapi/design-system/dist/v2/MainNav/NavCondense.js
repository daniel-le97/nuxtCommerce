var c = Object.defineProperty;
var n = Object.getOwnPropertySymbols;
var d = Object.prototype.hasOwnProperty, m = Object.prototype.propertyIsEnumerable;
var a = (e, r, t) => r in e ? c(e, r, { enumerable: !0, configurable: !0, writable: !0, value: t }) : e[r] = t, l = (e, r) => {
  for (var t in r || (r = {}))
    d.call(r, t) && a(e, t, r[t]);
  if (n)
    for (var t of n(r))
      m.call(r, t) && a(e, t, r[t]);
  return e;
};
var p = (e, r) => {
  var t = {};
  for (var o in e)
    d.call(e, o) && r.indexOf(o) < 0 && (t[o] = e[o]);
  if (e != null && n)
    for (var o of n(e))
      r.indexOf(o) < 0 && m.call(e, o) && (t[o] = e[o]);
  return t;
};
import i from "react";
import h from "prop-types";
import u from "styled-components";
import f from "@strapi/icons/ChevronRight";
import g from "@strapi/icons/ChevronLeft";
import { Icon as $ } from "../../Icon/Icon.js";
import { VisuallyHidden as b } from "../../VisuallyHidden/VisuallyHidden.js";
import { useMainNav as v } from "./MainNavContext.js";
const y = u.button`
  background: ${({ theme: e }) => e.colors.neutral0};
  border: 1px solid ${({ theme: e }) => e.colors.neutral150};
  border-radius: ${({ theme: e }) => e.borderRadius};
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  bottom: ${(9 + 4) / 16}rem; // 9 is the height of the svg and 4 is the padding below
  right: ${({ theme: e, condensed: r }) => r ? 0 : e.spaces[5]};
  transform: ${({ condensed: e }) => e ? "translateX(50%)" : void 0};
  z-index: 2;
  width: ${18 / 16}rem;
  height: ${25 / 16}rem;

  svg {
    width: ${6 / 16}rem;
    height: ${9 / 16}rem;
  }
`, x = (t) => {
  var o = t, { children: e } = o, r = p(o, ["children"]);
  const s = v();
  return /* @__PURE__ */ i.createElement(y, l({
    as: "button",
    condensed: s
  }, r), /* @__PURE__ */ i.createElement($, {
    as: s ? f : g,
    "aria-hidden": !0,
    color: "neutral600"
  }), /* @__PURE__ */ i.createElement(b, null, e));
};
x.propTypes = {
  children: h.string.isRequired
};
export {
  x as NavCondense
};
