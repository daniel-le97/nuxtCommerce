"use strict";var f=Object.defineProperty;var s=Object.getOwnPropertySymbols;var l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable;var i=(e,t,o)=>t in e?f(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,u=(e,t)=>{for(var o in t||(t={}))l.call(t,o)&&i(e,o,t[o]);if(s)for(var o of s(t))c.call(t,o)&&i(e,o,t[o]);return e};var d=(e,t)=>{var o={};for(var r in e)l.call(e,r)&&t.indexOf(r)<0&&(o[r]=e[r]);if(e!=null&&s)for(var r of s(e))t.indexOf(r)<0&&c.call(e,r)&&(o[r]=e[r]);return o};Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const y=require("react"),b=require("prop-types"),k=require("styled-components"),L=require("../../BaseLink/BaseLink.cjs"),a=e=>e&&typeof e=="object"&&"default"in e?e:{default:e},_=a(y),p=a(b),$=a(k),g=$.default(L.BaseLink)`
  border-radius: ${({theme:e})=>e.borderRadius};
  color: ${({theme:e})=>e.colors.neutral600};
  font-size: ${({theme:e})=>e.fontSizes[1]};
  line-height: ${({theme:e})=>e.lineHeights[4]};
  padding: ${({theme:e})=>`${e.spaces[1]} ${e.spaces[2]}`};
  text-decoration: none;

  :hover,
  :focus {
    background-color: ${({theme:e})=>e.colors.neutral200};
    color: ${({theme:e})=>e.colors.neutral700};
  }
`,n=o=>{var r=o,{children:e}=r,t=d(r,["children"]);return _.default.createElement(g,u({},t),e)};n.displayName="CrumbLink";n.defaultProps={to:void 0};n.propTypes={children:p.default.node.isRequired,to:p.default.string};exports.CrumbLink=n;
