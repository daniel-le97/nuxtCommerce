var w = Object.defineProperty;
var n = Object.getOwnPropertySymbols;
var d = Object.prototype.hasOwnProperty, u = Object.prototype.propertyIsEnumerable;
var m = (e, r, o) => r in e ? w(e, r, { enumerable: !0, configurable: !0, writable: !0, value: o }) : e[r] = o, f = (e, r) => {
  for (var o in r || (r = {}))
    d.call(r, o) && m(e, o, r[o]);
  if (n)
    for (var o of n(r))
      u.call(r, o) && m(e, o, r[o]);
  return e;
};
var g = (e, r) => {
  var o = {};
  for (var t in e)
    d.call(e, t) && r.indexOf(t) < 0 && (o[t] = e[t]);
  if (e != null && n)
    for (var t of n(e))
      r.indexOf(t) < 0 && u.call(e, t) && (o[t] = e[t]);
  return o;
};
import l from "react";
import i from "prop-types";
import s from "styled-components";
import x from "@strapi/icons/Dot";
import { Box as a } from "../../Box/Box.js";
import { Typography as b } from "../../Typography/Typography.js";
import { Flex as y } from "../../Flex/Flex.js";
import { BaseLink as S } from "../../BaseLink/BaseLink.js";
const k = s(a)`
  display: flex;
  align-items: center;
  justify-content: space-between;
  text-decoration: none;
  color: ${({ theme: e }) => e.colors.neutral800};
  svg > * {
    fill: ${({ theme: e }) => e.colors.neutral600};
  }

  &.active {
    ${({ theme: e }) => `
      background-color: ${e.colors.primary100};
      border-right: 2px solid ${e.colors.primary600};
      svg > * {
        fill: ${e.colors.primary700};
      }
      ${b} {
        color: ${e.colors.primary700};
        font-weight: 500;
      }
      `}
  }

  &:focus-visible {
    outline-offset: -2px;
  }
`, $ = s(x)`
  width: ${12 / 16}rem;
  height: ${4 / 16}rem;
  * {
    fill: ${({ theme: e, $active: r }) => r ? e.colors.primary600 : e.colors.neutral600};
  }
`, B = s.div`
  svg {
    height: ${12 / 16}rem;
    width: ${12 / 16}rem;
  }
`, p = l.forwardRef((L, E) => {
  var c = L, { children: e, icon: r, withBullet: o, as: t, isSubSectionChild: h } = c, v = g(c, ["children", "icon", "withBullet", "as", "isSubSectionChild"]);
  return /* @__PURE__ */ l.createElement(k, f({
    as: t,
    icon: r,
    background: "neutral100",
    paddingLeft: h ? 9 : 7,
    paddingBottom: 2,
    paddingTop: 2,
    ref: E
  }, v), /* @__PURE__ */ l.createElement(y, null, r ? /* @__PURE__ */ l.createElement(B, null, r) : /* @__PURE__ */ l.createElement($, null), /* @__PURE__ */ l.createElement(a, {
    paddingLeft: 2
  }, /* @__PURE__ */ l.createElement(b, {
    as: "span"
  }, e))), o && /* @__PURE__ */ l.createElement(a, {
    as: y,
    paddingRight: 4
  }, /* @__PURE__ */ l.createElement($, {
    $active: !0
  })));
});
p.displayName = "SubNavLink";
p.defaultProps = {
  as: S,
  icon: null,
  isSubSectionChild: !1,
  withBullet: !1
};
p.propTypes = {
  as: i.elementType,
  children: i.node.isRequired,
  icon: i.element,
  isSubSectionChild: i.bool,
  withBullet: i.bool
};
export {
  p as SubNavLink
};
