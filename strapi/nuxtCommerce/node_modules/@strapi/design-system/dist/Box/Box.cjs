"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const n=require("styled-components"),s=require("../helpers/handleResponsiveValues.cjs"),t=require("./BoxProps.cjs"),d=e=>e&&typeof e=="object"&&"default"in e?e:{default:e},$=d(n),l={color:!0},i=$.default.div.withConfig({shouldForwardProp:(e,o)=>!l[e]&&o(e)})`
  // Font
  font-size: ${({fontSize:e,theme:o})=>o.fontSizes[e]||e};

  // Colors
  background: ${({theme:e,background:o})=>e.colors[o]};
  color: ${({theme:e,color:o})=>e.colors[o]};

  // Spaces
  ${({theme:e,padding:o})=>s("padding",o,e)}
  ${({theme:e,paddingTop:o})=>s("padding-top",o,e)}
  ${({theme:e,paddingRight:o})=>s("padding-right",o,e)}
  ${({theme:e,paddingBottom:o})=>s("padding-bottom",o,e)}
  ${({theme:e,paddingLeft:o})=>s("padding-left",o,e)}
  ${({theme:e,marginLeft:o})=>s("margin-left",o,e)}
  ${({theme:e,marginRight:o})=>s("margin-right",o,e)}
  ${({theme:e,marginTop:o})=>s("margin-top",o,e)}
  ${({theme:e,marginBottom:o})=>s("margin-bottom",o,e)}

  // Responsive hiding
  ${({theme:e,hiddenS:o})=>o?`${e.mediaQueries.tablet} { display: none; }`:void 0}
  ${({theme:e,hiddenXS:o})=>o?`${e.mediaQueries.mobile} { display: none; }`:void 0}
  

  // Borders
  border-radius: ${({theme:e,hasRadius:o,borderRadius:r})=>o?e.borderRadius:r};
  border-style: ${({borderStyle:e})=>e};
  border-width: ${({borderWidth:e})=>e};
  border-color: ${({borderColor:e,theme:o})=>o.colors[e]};
  border: ${({theme:e,borderColor:o,borderStyle:r,borderWidth:a})=>{if(o&&!r&&!a)return`1px solid ${e.colors[o]}`}};

  // Shadows
  box-shadow: ${({theme:e,shadow:o})=>e.shadows[o]};

  // Handlers
  pointer-events: ${({pointerEvents:e})=>e};
  &:hover {
    ${({_hover:e,theme:o})=>e?e(o):void 0}
  }

  // Display
  display: ${({display:e})=>e};

  // Position
  position: ${({position:e})=>e};
  left: ${({left:e,theme:o})=>o.spaces[e]||e};
  right: ${({right:e,theme:o})=>o.spaces[e]||e};
  top: ${({top:e,theme:o})=>o.spaces[e]||e};
  bottom: ${({bottom:e,theme:o})=>o.spaces[e]||e};
  z-index: ${({zIndex:e})=>e};
  overflow: ${({overflow:e})=>e};
  cursor: ${({cursor:e})=>e};

  // Size
  width: ${({width:e,theme:o})=>o.spaces[e]||e};
  max-width: ${({maxWidth:e,theme:o})=>o.spaces[e]||e};
  min-width: ${({minWidth:e,theme:o})=>o.spaces[e]||e};
  height: ${({height:e,theme:o})=>o.spaces[e]||e};
  max-height: ${({maxHeight:e,theme:o})=>o.spaces[e]||e};
  min-height: ${({minHeight:e,theme:o})=>o.spaces[e]||e};

  // Animation
  transition: ${({transition:e})=>e};
  transform: ${({transform:e})=>e};
  animation: ${({animation:e})=>e};

  //Flexbox children props
  flex-shrink: ${({shrink:e})=>e};
  flex-grow: ${({grow:e})=>e};
  flex-basis: ${({basis:e})=>e};
  flex: ${({flex:e})=>e};

  // Text
  text-align: ${({textAlign:e})=>e};
  text-transform: ${({textTransform:e})=>e};
  line-height: ${({lineHeight:e})=>e};

  // Cursor
  cursor: ${({cursor:e})=>e};
`;i.defaultProps=t.boxDefaultProps;i.propTypes=t.boxPropTypes;exports.Box=i;
