var c = Object.defineProperty;
var t = Object.getOwnPropertySymbols;
var i = Object.prototype.hasOwnProperty, l = Object.prototype.propertyIsEnumerable;
var e = (r, o, m) => o in r ? c(r, o, { enumerable: !0, configurable: !0, writable: !0, value: m }) : r[o] = m, h = (r, o) => {
  for (var m in o || (o = {}))
    i.call(o, m) && e(r, m, o[m]);
  if (t)
    for (var m of t(o))
      l.call(o, m) && e(r, m, o[m]);
  return r;
};
import { lightColorTokenObject as s } from "./light-colors.js";
import { lightShadowTokenObject as n } from "./light-shadows.js";
import { commonTheme as p } from "../common-theme.js";
const g = h({
  colors: s.color,
  shadows: n.shadow
}, p);
export {
  g as lightTheme
};
