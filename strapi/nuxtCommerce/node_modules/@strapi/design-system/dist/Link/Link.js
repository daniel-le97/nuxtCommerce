var k = Object.defineProperty;
var i = Object.getOwnPropertySymbols;
var f = Object.prototype.hasOwnProperty, u = Object.prototype.propertyIsEnumerable;
var p = (e, r, o) => r in e ? k(e, r, { enumerable: !0, configurable: !0, writable: !0, value: o }) : e[r] = o, v = (e, r) => {
  for (var o in r || (r = {}))
    f.call(r, o) && p(e, o, r[o]);
  if (i)
    for (var o of i(r))
      u.call(r, o) && p(e, o, r[o]);
  return e;
};
var y = (e, r) => {
  var o = {};
  for (var t in e)
    f.call(e, t) && r.indexOf(t) < 0 && (o[t] = e[t]);
  if (e != null && i)
    for (var t of i(e))
      r.indexOf(t) < 0 && u.call(e, t) && (o[t] = e[t]);
  return o;
};
import n, { forwardRef as x } from "react";
import a from "prop-types";
import g from "styled-components";
import R from "@strapi/icons/ExternalLink";
import { NavLink as w } from "react-router-dom";
import { Typography as h } from "../Typography/Typography.js";
import { Box as I } from "../Box/Box.js";
import { buttonFocusStyle as T } from "../themes/utils.js";
const _ = g.a`
  display: inline-flex;
  align-items: center;
  text-decoration: none;
  pointer-events: ${({ disabled: e }) => e ? "none" : void 0};
  color: ${({ disabled: e, theme: r }) => e ? r.colors.neutral600 : r.colors.primary600};

  svg path {
    transition: fill 150ms ease-out;
    fill: currentColor;
  }

  svg {
    font-size: ${10 / 16}rem;
  }

  ${h} {
    transition: color 150ms ease-out;
    color: currentColor;
  }

  &:hover {
    color: ${({ theme: e }) => e.colors.primary500};
  }

  &:active {
    color: ${({ theme: e }) => e.colors.primary700};
  }

  ${T};
`, l = g(I)`
  display: flex;
`, d = x((C, L) => {
  var c = C, { href: e, to: r, children: o, disabled: t, startIcon: s, endIcon: m } = c, E = y(c, ["href", "to", "children", "disabled", "startIcon", "endIcon"]);
  const $ = e ? "_blank" : void 0, b = e ? "noreferrer noopener" : void 0;
  return /* @__PURE__ */ n.createElement(_, v({
    as: r && !t ? w : "a",
    target: $,
    rel: b,
    to: t ? void 0 : r,
    href: t ? "#" : e,
    disabled: t,
    ref: L
  }, E), s && /* @__PURE__ */ n.createElement(l, {
    as: "span",
    "aria-hidden": !0,
    paddingRight: 2
  }, s), /* @__PURE__ */ n.createElement(h, null, o), m && !e && /* @__PURE__ */ n.createElement(l, {
    as: "span",
    "aria-hidden": !0,
    paddingLeft: 2
  }, m), e && /* @__PURE__ */ n.createElement(l, {
    as: "span",
    "aria-hidden": !0,
    paddingLeft: 2
  }, /* @__PURE__ */ n.createElement(R, null)));
});
d.displayName = "Link";
d.defaultProps = {
  endIcon: void 0,
  href: void 0,
  to: void 0,
  disabled: !1,
  startIcon: void 0
};
d.propTypes = {
  children: a.node.isRequired,
  disabled: a.bool,
  endIcon: a.element,
  href(e) {
    if (!e.disabled && !e.to && !e.href)
      return new Error("href must be defined");
  },
  startIcon: a.element,
  to(e) {
    if (!e.disabled && !e.href && !e.to)
      return new Error("to must be defined");
  }
};
export {
  d as Link
};
