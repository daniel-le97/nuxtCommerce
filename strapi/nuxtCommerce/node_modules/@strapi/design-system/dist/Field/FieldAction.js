var c = Object.defineProperty;
var i = Object.getOwnPropertySymbols;
var d = Object.prototype.hasOwnProperty, p = Object.prototype.propertyIsEnumerable;
var a = (e, r, t) => r in e ? c(e, r, { enumerable: !0, configurable: !0, writable: !0, value: t }) : e[r] = t, s = (e, r) => {
  for (var t in r || (r = {}))
    d.call(r, t) && a(e, t, r[t]);
  if (i)
    for (var t of i(r))
      p.call(r, t) && a(e, t, r[t]);
  return e;
};
var l = (e, r) => {
  var t = {};
  for (var o in e)
    d.call(e, o) && r.indexOf(o) < 0 && (t[o] = e[o]);
  if (e != null && i)
    for (var o of i(e))
      r.indexOf(o) < 0 && p.call(e, o) && (t[o] = e[o]);
  return t;
};
import u from "react";
import b from "styled-components";
import m from "prop-types";
const f = b.button`
  border: none;
  background: transparent;
  // TODO: Make sure to use the theme when it's ready
  font-size: 1.6rem;
  width: auto;
  padding: 0;
  display: flex;
  align-items: center;
`, y = (o) => {
  var n = o, { label: e, children: r } = n, t = l(n, ["label", "children"]);
  return /* @__PURE__ */ u.createElement(f, s({
    "aria-label": e,
    type: "button"
  }, t), r);
};
y.propTypes = {
  children: m.node.isRequired,
  label: m.string.isRequired
};
export {
  y as FieldAction
};
