var f = Object.defineProperty;
var p = Object.getOwnPropertySymbols;
var m = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
var c = (r, o, t) => o in r ? f(r, o, { enumerable: !0, configurable: !0, writable: !0, value: t }) : r[o] = t, l = (r, o) => {
  for (var t in o || (o = {}))
    m.call(o, t) && c(r, t, o[t]);
  if (p)
    for (var t of p(o))
      n.call(o, t) && c(r, t, o[t]);
  return r;
};
import s from "react";
import a from "prop-types";
import i from "styled-components";
import { Box as d } from "../Box/Box.js";
const u = i(d)`
  path {
    fill: ${({ color: r, theme: o }) => o.colors[r]};
  }
  ${({ theme: r, colors: o }) => o(r)}
`, e = s.forwardRef((r, o) => /* @__PURE__ */ s.createElement(u, l({
  ref: o
}, r)));
e.displayName = "Icon";
e.defaultProps = {
  color: "neutral600",
  colors: () => {
  }
};
e.propTypes = {
  color: a.string,
  colors: a.func
};
export {
  e as Icon
};
