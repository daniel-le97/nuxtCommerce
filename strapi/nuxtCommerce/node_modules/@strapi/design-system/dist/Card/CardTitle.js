var m = Object.defineProperty, p = Object.defineProperties;
var u = Object.getOwnPropertyDescriptors;
var a = Object.getOwnPropertySymbols;
var c = Object.prototype.hasOwnProperty, s = Object.prototype.propertyIsEnumerable;
var i = (r, t, e) => t in r ? m(r, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : r[t] = e, o = (r, t) => {
  for (var e in t || (t = {}))
    c.call(t, e) && i(r, e, t[e]);
  if (a)
    for (var e of a(t))
      s.call(t, e) && i(r, e, t[e]);
  return r;
}, n = (r, t) => p(r, u(t));
import l from "react";
import { Typography as d } from "../Typography/Typography.js";
import { useCard as f } from "./CardContext.js";
const g = (r) => {
  const { id: t } = f();
  return /* @__PURE__ */ l.createElement(d, o({
    variant: "pi",
    id: `${t}-title`,
    textColor: "neutral800",
    fontWeight: "bold",
    as: "div"
  }, r));
}, h = (r) => /* @__PURE__ */ l.createElement(d, n(o({
  variant: "pi"
}, r), {
  textColor: "neutral600",
  as: "div"
}));
export {
  h as CardSubtitle,
  g as CardTitle
};
